[{"C:\\Users\\LENOVO\\Desktop\\online\\src\\index.js":"1","C:\\Users\\LENOVO\\Desktop\\online\\src\\App.js":"2","C:\\Users\\LENOVO\\Desktop\\online\\src\\reportWebVitals.js":"3","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\admin\\index.js":"4","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\Login\\index.js":"5","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\admin\\components\\aside.js":"6","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\admin\\components\\header.js":"7","C:\\Users\\LENOVO\\Desktop\\online\\src\\components\\ContainMain\\index.js":"8","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\Login\\LoginForm.js":"9","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\Login\\RegisterForm.js":"10","C:\\Users\\LENOVO\\Desktop\\online\\src\\components\\asideMenu\\index.js":"11","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctor\\index.js":"12","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctorschedule\\index.js":"13","C:\\Users\\LENOVO\\Desktop\\online\\src\\service\\account.js":"14","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctor\\searchBar.js":"15","C:\\Users\\LENOVO\\Desktop\\online\\src\\router\\index.js":"16","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctor\\doctorListTable.js":"17","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctorschedule\\searchBar.js":"18","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctorschedule\\schedules.js":"19","C:\\Users\\LENOVO\\Desktop\\online\\src\\utils\\request.js":"20","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctor\\adddoctor.js":"21","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctor\\editdoctor.js":"22","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctor\\deletedoctor.js":"23","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctorschedule\\ScheduleTableComponent.js":"24","C:\\Users\\LENOVO\\Desktop\\online\\src\\store\\index.js":"25","C:\\Users\\LENOVO\\Desktop\\online\\src\\store\\reducer.js":"26","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctorschedule\\adddoctorForm.js":"27","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctorschedule\\editschedule.js":"28","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\depart\\index.js":"29","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\project\\index.js":"30","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\registerinformation\\index.js":"31","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\depart\\adddepart.js":"32","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\depart\\editdepart.js":"33","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\depart\\deletedepart.js":"34","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\project\\addproject.js":"35","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\project\\editproject.js":"36","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\project\\deleteproject.js":"37","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\registerinformation\\editregisterinformation.js":"38","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\patient\\index.js":"39","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\patient\\editpatient.js":"40","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\patient\\addpatient.js":"41","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\patient\\chatpatient.js":"42"},{"size":451,"mtime":1610933985577,"results":"43","hashOfConfig":"44"},{"size":553,"mtime":1610933985572,"results":"45","hashOfConfig":"44"},{"size":375,"mtime":1610933985579,"results":"46","hashOfConfig":"44"},{"size":1271,"mtime":1612842375115,"results":"47","hashOfConfig":"44"},{"size":1000,"mtime":1610933985591,"results":"48","hashOfConfig":"44"},{"size":376,"mtime":1610933985594,"results":"49","hashOfConfig":"44"},{"size":2070,"mtime":1612842313946,"results":"50","hashOfConfig":"44"},{"size":1157,"mtime":1612334433279,"results":"51","hashOfConfig":"44"},{"size":5485,"mtime":1615386174244,"results":"52","hashOfConfig":"44"},{"size":8744,"mtime":1612791377671,"results":"53","hashOfConfig":"44"},{"size":3934,"mtime":1612187888901,"results":"54","hashOfConfig":"44"},{"size":385,"mtime":1610933985599,"results":"55","hashOfConfig":"44"},{"size":391,"mtime":1611997833653,"results":"56","hashOfConfig":"44"},{"size":5449,"mtime":1613360462413,"results":"57","hashOfConfig":"44"},{"size":4767,"mtime":1612184570891,"results":"58","hashOfConfig":"44"},{"size":1531,"mtime":1612101719165,"results":"59","hashOfConfig":"44"},{"size":6195,"mtime":1613030318494,"results":"60","hashOfConfig":"44"},{"size":6028,"mtime":1613361100452,"results":"61","hashOfConfig":"44"},{"size":1807,"mtime":1611998925121,"results":"62","hashOfConfig":"44"},{"size":689,"mtime":1610933985587,"results":"63","hashOfConfig":"44"},{"size":12407,"mtime":1613026688616,"results":"64","hashOfConfig":"44"},{"size":12345,"mtime":1613030889262,"results":"65","hashOfConfig":"44"},{"size":8227,"mtime":1613372460104,"results":"66","hashOfConfig":"44"},{"size":4457,"mtime":1613314264517,"results":"67","hashOfConfig":"44"},{"size":606,"mtime":1610933985584,"results":"68","hashOfConfig":"44"},{"size":874,"mtime":1613025020648,"results":"69","hashOfConfig":"44"},{"size":4681,"mtime":1613200920966,"results":"70","hashOfConfig":"44"},{"size":3151,"mtime":1613360131091,"results":"71","hashOfConfig":"44"},{"size":3254,"mtime":1613033031173,"results":"72","hashOfConfig":"44"},{"size":6282,"mtime":1612945250582,"results":"73","hashOfConfig":"44"},{"size":6540,"mtime":1613011541585,"results":"74","hashOfConfig":"44"},{"size":3783,"mtime":1612929760207,"results":"75","hashOfConfig":"44"},{"size":3605,"mtime":1612930270533,"results":"76","hashOfConfig":"44"},{"size":4723,"mtime":1613373538074,"results":"77","hashOfConfig":"44"},{"size":5580,"mtime":1613374960239,"results":"78","hashOfConfig":"44"},{"size":5724,"mtime":1612946280608,"results":"79","hashOfConfig":"44"},{"size":5337,"mtime":1613375320304,"results":"80","hashOfConfig":"44"},{"size":6025,"mtime":1612962954842,"results":"81","hashOfConfig":"44"},{"size":7141,"mtime":1613033043550,"results":"82","hashOfConfig":"44"},{"size":10752,"mtime":1612924140797,"results":"83","hashOfConfig":"44"},{"size":12296,"mtime":1613023922711,"results":"84","hashOfConfig":"44"},{"size":12430,"mtime":1612426831318,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"f8damb",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"88"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"88"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"88"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"88"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"88"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"88"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"88"},"C:\\Users\\LENOVO\\Desktop\\online\\src\\index.js",[],["202","203"],"C:\\Users\\LENOVO\\Desktop\\online\\src\\App.js",[],"C:\\Users\\LENOVO\\Desktop\\online\\src\\reportWebVitals.js",[],"C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\admin\\index.js",["204"],"import React,{Component} from 'react';\r\nimport {Layout} from 'antd';\r\nimport \"./index.css\";\r\nimport Aside from \"./components/aside\"\r\nimport LayoutHeader from \"./components/header\"\r\nimport ContainMain from \"../../components/ContainMain/index\"\r\n//import AsideMenu from \"../../components/asideMenu/index\"\r\nconst {Sider,Header,Content,Footer} =Layout;\r\n\r\nclass Index extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n          collapsed:false,\r\n          // usernow:this.props.location.query.names\r\n        };\r\n    }\r\n    iconCollapsed = () =>{\r\n      this.setState({\r\n        collapsed:!this.state.collapsed\r\n      })\r\n    }\r\n    render(){\r\n      // console.log('0208',this.props.location.query.names)\r\n        return (\r\n            <Layout className=\"layout-wrap\">\r\n              <Header className=\"layout-header\" ><LayoutHeader  iconCollapsed={this.iconCollapsed} collapsed={this.state.collapsed}/></Header>   \r\n            <Layout>     \r\n              <Sider width=\"250px\" collapsed={this.state.collapsed}><Aside/></Sider>             \r\n              <Content className=\"layout-main\">\r\n                 <ContainMain/>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        )\r\n    }\r\n}\r\nexport default Index;","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\Login\\index.js",["205","206","207","208","209","210","211","212"],"import React,{Component} from 'react';\r\nimport \"./index.css\";\r\nimport { Form, Icon, Input, Button,Row,Col } from 'antd';\r\nimport { UserOutlined,UnlockOutlined } from '@ant-design/icons';\r\nimport LoginForm from \"./LoginForm\";\r\nimport RegisterForm from \"./RegisterForm\";\r\n \r\nclass Login extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            formType:\"login\"\r\n        };\r\n    }\r\n    switchForm=(value)=>{\r\n        console.log(value);\r\n        this.setState({\r\n            formType:value\r\n        })\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"form-wrap\">\r\n                <div>\r\n                    {\r\n                        this.state.formType===\"login\"?\r\n                        <LoginForm switchForm={this.switchForm}></LoginForm>:\r\n                        <RegisterForm switchForm={this.switchForm}></RegisterForm>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Login;","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\admin\\components\\aside.js",[],"C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\admin\\components\\header.js",["213","214","215"],"import React,{Component,Fragment} from 'react';\r\nimport \"./aside.css\"\r\nimport { MenuFoldOutlined} from '@ant-design/icons';\r\nclass LayoutHeader extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            collapsed:props.collapsed,\r\n            // usernow:this.props.usernow\r\n        };\r\n    }\r\n    componentWillReceiveProps({collapsed}){\r\n        this.setState({\r\n            collapsed\r\n        })\r\n    }\r\n    iconclick = ()=>{\r\n        this.props.iconCollapsed();\r\n    }\r\n    \r\n    render(){\r\n        const {collapsed} = this.state;\r\n        let date = new Date().getDate();\r\n        let month = new Date().getMonth() + 1;\r\n        let year = new Date().getFullYear();\r\n        // let zhou=new Date().getDay(); 这种方式也可以获取周几\r\n        let hour = new Date().getHours();\r\n        let minute = new Date().getMinutes();\r\n        let seconds = new Date().getSeconds();\r\n        const value=year+\"-\"+month+\"-\"+date;\r\n        const day = new Date(Date.parse(value.replace(/-/g, '/')));\r\n        const today = [\"周日\", \"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\"];\r\n        //    const newdate=new Date(\"month dd,yyyy hh:mm:ss\");\r\n        //    console.log(newdate);\r\n       \r\n        return (\r\n            <Fragment>\r\n                    <h1 className={collapsed ? \"logoclose\":\"logo\"}><span className={collapsed ? \"blockclose\" : \"block\" }></span></h1>               \r\n                <div className={collapsed?\"header-wrapclose\":\"header-wrap\"}>\r\n                    <span style={{fontSize:\"24px\"}} onClick={this.iconclick}><MenuFoldOutlined /></span>\r\n                    {/* <span>{newdate}</span> */}\r\n                    \r\n                    <span className=\"header_date\">{year+\"-\"+month+\"-\"+date+\"  \"}</span>\r\n                    <span className=\"header_week\">{today[day.getDay()]}</span>\r\n                    {/* <span className=\"header_nowuser\">当前用户：{this.state.usernow}</span> */}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default LayoutHeader;","C:\\Users\\LENOVO\\Desktop\\online\\src\\components\\ContainMain\\index.js",["216"],"import React from 'react';\r\nimport {Switch,Route, HashRouter} from 'react-router-dom';\r\nimport PatientList from \"../../views/patient/index\"\r\nimport Doctor from \"../../views/doctor/index\"\r\nimport DoctorSchedule from \"../../views/doctorschedule/index\"\r\nimport DepartList from \"../../views/depart/index\"\r\nimport ProjectList from \"../../views/project/index\"\r\nimport RegisterList from \"../../views/registerinformation/index\"\r\n\r\n\r\nclass ContainMain extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={};\r\n  }\r\n  render(){ \r\n    return (     \r\n      <Switch> \r\n        <Route component={PatientList}   path='/index/user/list' />\r\n        {/* <Route exact path=\"/index/user/list\" component={User}/> */}\r\n        <Route path=\"/index/doctor/list\" component={Doctor}/>\r\n        <Route path=\"/index/doctorschedule/list\" component={DoctorSchedule}/>\r\n        <Route path=\"/index/depart/list\" component={DepartList}/>\r\n        <Route path=\"/index/project/list\" component={ProjectList}/>\r\n        <Route path=\"/index/registerinformation/list\" component={RegisterList}/>\r\n      </Switch>\r\n\r\n    ); \r\n  }\r\n}\r\n\r\n\r\nexport default ContainMain;\r\n","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\Login\\LoginForm.js",["217","218"],"import React,{Component} from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\nimport \"./index.css\";\r\nimport { Form, Icon, Input, Button,Row,Col,message} from 'antd';\r\nimport { UserOutlined,UnlockOutlined,FontColorsOutlined } from '@ant-design/icons';\r\nimport {Login,GetCode} from '../../service/account'//导入接口\r\n \r\nclass LoginForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            username:\"\",\r\n            password:\"\",\r\n            code:\"\",\r\n            module:\"login\"\r\n        };\r\n    }\r\n    //登录事件\r\n    onFinish=(value)=>{\r\n        const requestData={\r\n            username:this.state.username,\r\n            password:this.state.password,\r\n            code:this.state.code\r\n        }\r\n        Login(requestData).then(response=>{\r\n            \r\n            // this.props.history.push('./index')\r\n            if(response.data.rescode == 1){\r\n                message.success(response.data.message)\r\n                this.props.history.push({pathname:'./index',query:{\r\n                    names:this.state.username\r\n                }},\r\n                )}else{\r\n                 message.error(response.data.message)}\r\n            //通过withRouter加工后的组件会多一个history props,可以通过history跳转路由\r\n        }).catch(error=>{\r\n        })\r\n        console.log('hahh',value);\r\n    }\r\n    //获取验证码\r\n\r\n    getCode=()=>{\r\n        if(!this.state.username){\r\n            message.warning('用户名不能为空',1);\r\n            return false;\r\n        }\r\n        const requestData = {\r\n            username:this.state.username,\r\n            module:\"login\"\r\n        }\r\n        GetCode(requestData).then(response=>{\r\n            message.success(response.data.message)\r\n            console.log(response)\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n       \r\n    }\r\n    //输入处理\r\n    //输入处理\r\n    inputChangeUsername=(e)=>{\r\n        let value=e.target.value;\r\n        this.setState({\r\n            username:value\r\n        })\r\n    }\r\n    inputChangePassword=(e)=>{\r\n        let value=e.target.value;\r\n        this.setState({\r\n            password:value\r\n        })\r\n    }\r\n    inputChangeCode=(e)=>{\r\n        let value=e.target.value;\r\n        this.setState({\r\n            code:value\r\n        })\r\n    }\r\n    changeformtype=()=>{\r\n        this.props.switchForm(\"register\");       \r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"form-wrap\">\r\n                <div>\r\n                    <div className=\"form-header\">\r\n                        <h4 className=\"form-loginborder\">登录</h4>\r\n                        <h4 className=\"form-register\" onClick={this.changeformtype}>注册</h4>\r\n                    </div>\r\n                    <div className=\"form-content\">\r\n                    <Form name=\"normal_login\" \r\n                    className=\"login-form\"\r\n                    initialValues={{remember:true}}\r\n                    onFinish={this.onFinish}>\r\n                        <Row>\r\n                        <Col span={6} className=\"username\">用户名：\r\n                        </Col>\r\n                        <Col span={16}>\r\n                        <Form.Item name=\"username\" rules={[{ required: true, message: 'Please input your username!' }]}>                          \r\n                            <Input  onChange={this.inputChangeUsername}\r\n                            prefix={<UserOutlined className=\"site-form-item-icon\" />}placeholder=\"Username\"/>                      \r\n                        </Form.Item>\r\n                        </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col span={6} className=\"username\">密码：\r\n                        </Col>\r\n                        <Col span={16}>\r\n                        <Form.Item name=\"password\" rules={[{ required: true, message: 'Please input your password!' }]}>                          \r\n                            <Input type=\"password\" onChange={this.inputChangePassword}\r\n                            prefix={<UnlockOutlined  className=\"site-form-item-icon\" />}placeholder=\"Password\"/>                      \r\n                        </Form.Item>\r\n                        </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col span={12}>\r\n                        <Form.Item name=\"code\" rules={[{ required: true, message: '请输入长度为6的验证码!',len:6 }]}>                          \r\n                            <Input onChange={this.inputChangeCode}\r\n                            prefix={<FontColorsOutlined  className=\"site-form-item-icon\" />} placeholder=\"code\"/>                      \r\n                        </Form.Item>\r\n                        </Col> \r\n                        <Col span={6}>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"code-form-button\" onClick={this.getCode}>\r\n                            获取验证码\r\n                        </Button>\r\n                        </Col>\r\n                        </Row>\r\n                        <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" >\r\n                            登录\r\n                        </Button>\r\n                        </Form.Item>\r\n      </Form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(LoginForm);","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\Login\\RegisterForm.js",["219","220"],"import React,{Component} from 'react';\r\nimport \"./index.css\";\r\nimport { Form, Icon, Input, Button,Row,Col,message } from 'antd';\r\nimport {GetCode,Register} from '../../service/account'//导入接口\r\nimport { UserOutlined,UnlockOutlined,MobileOutlined,FileMarkdownOutlined,FontColorsOutlined } from '@ant-design/icons';\r\n \r\nclass RegisterForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            username:\"\",\r\n            password:\"\",\r\n            code:\"\",\r\n            telephone:\"\",\r\n            email:\"\",\r\n            module:\"register\"\r\n        };\r\n    }\r\n    onFinish=(value)=>{\r\n        const requestData ={\r\n            username:this.state.username,\r\n            password:this.state.password,\r\n            telephone:this.state.telephone,\r\n            email:this.state.email,\r\n            code:this.state.code\r\n        }\r\n        console.log(requestData);\r\n        Register(requestData).then(response=>{\r\n            if(response.data.rescode == 1){\r\n                message.success(response.data.message)\r\n                console.log(response)\r\n            }else{\r\n                message.error(response.data.message)\r\n            }\r\n            \r\n        }).catch(error=>{\r\n            \r\n        })\r\n    }\r\n    getCode=()=>{\r\n        if(!this.state.username){\r\n            message.warning('用户名不能为空',1);\r\n            return false;\r\n        }\r\n        const requestData = {\r\n            username:this.state.username,\r\n            module:\"register\"\r\n        }\r\n        GetCode(requestData).then(response=>{\r\n            message.success(response.data.message)\r\n            console.log(response)\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n       \r\n    }\r\n    changeformtype=()=>{\r\n        this.props.switchForm(\"login\");       \r\n    }\r\n    //输入处理\r\n    inputChangeUsername=(e)=>{\r\n        let value=e.target.value;\r\n        this.setState({\r\n            username:value\r\n        })\r\n    }\r\n    inputChangePassword=(e)=>{\r\n        let value=e.target.value;\r\n        this.setState({\r\n            password:value\r\n        })\r\n    }\r\n    inputChangeTelephone=(e)=>{\r\n        let value=e.target.value;\r\n        this.setState({\r\n            telephone:value\r\n        })\r\n    }\r\n    inputChangeEmail=(e)=>{\r\n        let value=e.target.value;\r\n        this.setState({\r\n            email:value\r\n        })\r\n    }\r\n    inputChangeCode=(e)=>{\r\n        let value=e.target.value;\r\n        this.setState({\r\n            code:value\r\n        })\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"form-wrap-register\">\r\n                <div>\r\n                    <div className=\"form-header\">\r\n                        <h4 className=\"form-loginborder\">注册</h4>\r\n                        <h4 className=\"form-register\" onClick={this.changeformtype}>登录</h4>                       \r\n                    </div>\r\n                    <div className=\"form-content\">\r\n                    <Form name=\"normal_login\" \r\n                    className=\"login-form\"\r\n                    initialValues={{remember:true}}\r\n                    onFinish={this.onFinish}>\r\n                        <Row>\r\n                        <Col span={6} className=\"username\">用户名：\r\n                        </Col>\r\n                        <Col span={16}>\r\n                        <Form.Item name=\"username\" rules={[{ required: true, message: '请输入用户名!' }]}>                          \r\n                            <Input onChange={this.inputChangeUsername}\r\n                            prefix={<UserOutlined className=\"site-form-item-icon\" />}placeholder=\"请输入用户名\"/>                      \r\n                        </Form.Item>\r\n                        </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col span={6} className=\"username\">密码：\r\n                        </Col>\r\n                        <Col span={16}>\r\n                        <Form.Item name=\"password\" rules={[{ required: true, message: '请输入密码!' },{pattern:/^[0-9a-zA-Z_-]{6}$/g,message:\"请输入6位包含数字或字母的密码\"},\r\n                    ({getFieldValue})=>({\r\n                        validator(rule,value){\r\n                        let confirmpassword_value=getFieldValue('confirmpassword');\r\n                        if(confirmpassword_value&&value!==confirmpassword_value) {\r\n                        return Promise.reject('两次密码输入不一致');\r\n                    }\r\n                    return Promise.resolve();\r\n                    },\r\n                    }),\r\n                    ]}>                          \r\n                            <Input type=\"password\" onChange={this.inputChangePassword} \r\n                            prefix={<UnlockOutlined  className=\"site-form-item-icon\" />}placeholder=\"请输入6位数密码\"/>                      \r\n                        </Form.Item>\r\n                        </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col span={6} className=\"username\">确认密码：\r\n                        </Col>\r\n                        <Col span={16}>\r\n                        <Form.Item name=\"confirmpassword\" rules={[{ required: true, message: '请再次输入密码!' },\r\n                          ({getFieldValue})=>({\r\n                              validator(rule,value){\r\n                              if(!value||getFieldValue('password')===value) {\r\n                              return Promise.resolve();\r\n                          }\r\n                          return Promise.reject(\"两次密码输入不一致\");\r\n                          },\r\n                          }),\r\n                          ]}>                          \r\n                            <Input type=\"password\"\r\n                            prefix={<UnlockOutlined  className=\"site-form-item-icon\" />}placeholder=\"请再次输入密码!\"/>                      \r\n                        </Form.Item>\r\n                        </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col span={6} className=\"username\">电话号码：\r\n                        </Col>\r\n                        <Col span={16}>\r\n                        <Form.Item name=\"telephone\" rules={[{ required: true, message: '请输入您的电话号码!' },{pattern:/^1[0-9]{10}$/g,message:\"请输入11位手机号\"}]\r\n                             }>                          \r\n                            <Input onChange={this.inputChangeTelephone}\r\n                            prefix={<MobileOutlined   className=\"site-form-item-icon\" />}placeholder=\"请输入您的电话号码!\"/>                      \r\n                        </Form.Item>\r\n                        </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col span={6} className=\"username\">邮箱：\r\n                        </Col>\r\n                        <Col span={16}>\r\n                        <Form.Item name=\"email\" rules={[{ required: true, message: '请输入您的邮箱!' },\r\n                        {type: \"email\",message: \"请输入正确的邮箱格式\"}]}>                          \r\n                            <Input onChange={this.inputChangeEmail}\r\n                            prefix={<FileMarkdownOutlined   className=\"site-form-item-icon\" />}placeholder=\"请输入您的邮箱!\"/>                      \r\n                        </Form.Item>\r\n                        </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col span={12}>\r\n                        <Form.Item name=\"code\" rules={[{ required: true, message: '请输入长度为6的验证码!',len:6 }]}>                          \r\n                            <Input  onChange={this.inputChangeCode}\r\n                            prefix={<FontColorsOutlined  className=\"site-form-item-icon\" />} placeholder=\"code\"/>                      \r\n                        </Form.Item>\r\n                        </Col> \r\n                        <Col span={6}>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"code-form-button\" onClick={this.getCode}>\r\n                            获取验证码\r\n                        </Button>\r\n                        </Col>\r\n                        </Row>\r\n                        <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" >\r\n                            注册\r\n                        </Button>\r\n                        </Form.Item>\r\n      </Form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default RegisterForm;","C:\\Users\\LENOVO\\Desktop\\online\\src\\components\\asideMenu\\index.js",["221"],"import React,{Component,Fragment} from 'react';\r\nimport { Menu } from 'antd';\r\nimport {Link} from \"react-router-dom\";\r\nimport { UserOutlined,ProfileOutlined,SnippetsFilled,MessageFilled,AuditOutlined,AppstoreAddOutlined } from '@ant-design/icons';\r\nimport Router from \"../../router/index\"\r\nconst { SubMenu } = Menu;\r\nclass AsideMenu extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={};\r\n    }\r\n    //主菜单渲染\r\n    renderMenu=({key,title})=>{\r\n        return (\r\n        <Menu.Item key={key}> \r\n            <Link to={key}><span>{title}</span></Link>\r\n        </Menu.Item>\r\n        ) \r\n    }\r\n    //联级菜单渲染\r\n    renderSubMenu=({title,key,child}) => {\r\n        switch(title){\r\n            case \"患者管理\":return (\r\n                <SubMenu key={key} icon={<MessageFilled />} title={title}>\r\n                    {\r\n                        child && child.map(item => {\r\n                            return item.child && item.child.length >0 ? this.renderSubMenu(item) : this.renderMenu(item)\r\n                        })\r\n                    }\r\n                </SubMenu>\r\n            )\r\n            case \"医生管理\":return (\r\n                <SubMenu key={key} icon={<UserOutlined/>} title={title}>\r\n                    {\r\n                        child && child.map(item => {\r\n                            return item.child && item.child.length >0 ? this.renderSubMenu(item) : this.renderMenu(item)\r\n                        })\r\n                    }\r\n                </SubMenu>\r\n            )\r\n            case \"科室管理\":return (\r\n                <SubMenu key={key} icon={<AuditOutlined />} title={title}>\r\n                    {\r\n                        child && child.map(item => {\r\n                            return item.child && item.child.length >0 ? this.renderSubMenu(item) : this.renderMenu(item)\r\n                        })\r\n                    }\r\n                </SubMenu>\r\n            )\r\n            case \"项目管理\":return (\r\n                <SubMenu key={key} icon={<ProfileOutlined />} title={title}>\r\n                    {\r\n                        child && child.map(item => {\r\n                            return item.child && item.child.length >0 ? this.renderSubMenu(item) : this.renderMenu(item)\r\n                        })\r\n                    }\r\n                </SubMenu>\r\n            )\r\n            case \"医生排班\":return (\r\n                <SubMenu key={key} icon={<AppstoreAddOutlined />} title={title}>\r\n                    {\r\n                        child && child.map(item => {\r\n                            return item.child && item.child.length >0 ? this.renderSubMenu(item) : this.renderMenu(item)\r\n                        })\r\n                    }\r\n                </SubMenu>\r\n            )\r\n            case \"预约信息\":return (\r\n                <SubMenu key={key} icon={<SnippetsFilled />} title={title}>\r\n                    {\r\n                        child && child.map(item => {\r\n                            return item.child && item.child.length >0 ? this.renderSubMenu(item) : this.renderMenu(item)\r\n                        })\r\n                    }\r\n                </SubMenu>\r\n            )\r\n        }\r\n       \r\n    }\r\n    render(){\r\n        return (\r\n            <Fragment>\r\n                <Menu\r\n                theme=\"dark\"\r\n                mode=\"inline\"\r\n                defaultSelectedKeys={['/index/user/list']}\r\n                defaultOpenKeys={['/index/user']}\r\n                style={{ height: '100%', borderRight: 0 }}\r\n                >\r\n                    {\r\n                        Router && Router.map(firstitem =>{\r\n                            return firstitem.child && firstitem.child.length > 0 ? this.renderSubMenu(firstitem) : this.renderMenu(firstitem);\r\n                        })\r\n                    }\r\n                </Menu>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default AsideMenu;","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctor\\index.js",[],"C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctorschedule\\index.js",["222"],"import React, {Fragment} from 'react';\r\nimport SearchBar from './searchBar';\r\nimport Schedules from './schedules';\r\nclass DoctorSchedule extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={};\r\n  }\r\n  render(){\r\n    return (\r\n    <Fragment>\r\n        <SearchBar />\r\n        {/* <Schedules /> */}\r\n    </Fragment>\r\n)\r\n  }\r\n}\r\n\r\n\r\nexport default DoctorSchedule;\r\n","C:\\Users\\LENOVO\\Desktop\\online\\src\\service\\account.js",[],"C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctor\\searchBar.js",[],"C:\\Users\\LENOVO\\Desktop\\online\\src\\router\\index.js",[],"C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctor\\doctorListTable.js",["223","224","225"],"import React,{Fragment}  from 'react';\r\nimport { Table,Button } from 'antd';\r\nimport {PlusOutlined } from \"@ant-design/icons\";\r\nimport {Getdoctorlist} from '../../service/account'//导入接口\r\nimport DoctorAdd from './adddoctor';\r\nimport DoctorEdit from './editdoctor';\r\nimport DoctorDelete from './deletedoctor';\r\nclass DoctorListTable extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      doctorid:'',\r\n      doctorname:'',\r\n      doctorsex:'man',\r\n      doctorage:'',\r\n      doctorphone:'',\r\n      doctorposition:'',\r\n      doctordepart:'',\r\n      doctorproject:'',\r\n      doctorsqlid:\"\",\r\n      editvisible:false,\r\n      deletevisible:false,\r\n      list:[]\r\n    };\r\n  }\r\n  addFunc = () => {   \r\n    this.setState({\r\n      addvisible:!this.state.addvisible,    \r\n    })\r\n  }\r\n  //生命周期的使用，componentWillMount在渲染前调用,在客户端也在服务端。\r\n  componentWillMount() {\r\n    const requestData = {\r\n      doctorid: this.state.doctorid,\r\n      doctorname:this.state.doctorname,\r\n      doctorphone:this.state.doctorphone,\r\n      doctorposition:this.state.doctorposition,\r\n      doctordepart:this.state.doctordepart\r\n    }\r\n    Getdoctorlist(requestData).then(response=>{\r\n      const list=response.data.data;\r\n      this.setState({\r\n        list\r\n      })\r\n    }).catch(error=>{\r\n    })\r\n  }\r\n  editFunc = (record) => {\r\n    const doctorsqlid=record._id;\r\n    const {\r\n    doctorid,\r\n    doctorname,\r\n    doctorsex,\r\n    doctorage,\r\n    doctorphone,\r\n    doctorposition,\r\n    doctordepart,\r\n    doctorproject}=record;\r\n    this.setState({\r\n    doctorsqlid,\r\n    doctorid,\r\n    doctorname,\r\n    doctorsex,\r\n    doctorage,\r\n    doctorphone,\r\n    doctorposition,\r\n    doctordepart,\r\n    doctorproject\r\n    })\r\n    this.setState({\r\n      editvisible:!this.state.editvisible\r\n    })\r\n  }\r\n  deleteFunc = (record) => {   \r\n    const {\r\n      doctorid,\r\n      doctorname,\r\n      doctorsex,\r\n      doctorage,\r\n      doctorphone,\r\n      doctorposition,\r\n      doctordepart,\r\n      doctorproject}=record;\r\n      this.setState({\r\n      doctorid,\r\n      doctorname,\r\n      doctorsex,\r\n      doctorage,\r\n      doctorphone,\r\n      doctorposition,\r\n      doctordepart,\r\n      doctorproject\r\n      })\r\n      this.setState({\r\n        deletevisible:!this.state.deletevisible,    \r\n      })\r\n  }\r\n \r\n  render(){ \r\n    const columns = [\r\n        // {\r\n        //   title: '序列',\r\n        //   width: 60,\r\n        //   dataIndex: 'index',\r\n        //   key: 'index',\r\n        // },\r\n        {\r\n          title: '医生编号 ',\r\n          width: 120,\r\n          fixed:'left',\r\n          dataIndex: 'doctorid',\r\n          key: 'doctorid',\r\n        },\r\n        {\r\n          title: '姓名',\r\n          width: 120,\r\n          fixed:'left',\r\n          dataIndex: 'doctorname',\r\n          key: 'doctorname',\r\n          render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n          title: '性别',\r\n          width: 60,\r\n          dataIndex: 'doctorsex',\r\n          key: 'doctorsex',\r\n        },\r\n        {\r\n          title: '年龄',\r\n          width: 60,\r\n          dataIndex: 'doctorage',\r\n          key: 'doctorage',\r\n        },\r\n        {\r\n          title: '电话号码',\r\n          width: 120,\r\n          dataIndex: 'doctorphone',\r\n          key: 'doctorphone',\r\n        },\r\n        {\r\n          title: '职位',\r\n          width: 100,\r\n          dataIndex: 'doctorposition',\r\n          key: 'doctorposition',\r\n        },\r\n        {\r\n          title: '科室',\r\n          width: 80,\r\n          dataIndex: 'doctordepart',\r\n          key: 'doctordepart',\r\n        },\r\n        {\r\n          title: '所在项目',\r\n          width: 120,\r\n          dataIndex: 'doctorproject',\r\n          key: 'doctorproject',\r\n        },\r\n        {\r\n          title: '操作',\r\n          fixed:'right',\r\n          width: 60,\r\n          dataIndex: 'address1',\r\n          key: 'address1',\r\n          render: (text, record) => {\r\n            return (\r\n              <a onClick={() => this.editFunc(record)}>编辑</a>\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: '操作',\r\n          fixed:'right',\r\n          width: 60,\r\n          dataIndex: 'address2',\r\n          key: 'address2',\r\n          render: (text, record) => {\r\n            return (\r\n              <a onClick={() => this.deleteFunc(record)}>删除</a>\r\n            );\r\n          }\r\n        },\r\n        ]\r\n    return (   \r\n        <Fragment>\r\n          <Button style={{ display: 'block',marginBottom:'10px'}} \r\n            type='primary' onClick={() => this.addFunc()}><span\r\n              style={{ letterSpacing: '2px' }}><PlusOutlined />添加</span>\r\n          </Button>\r\n        <Table\r\n          size='middle'\r\n          className={\"\"}\r\n          scroll={\r\n            {\r\n              x: 'max-content',\r\n              y:'max-content'\r\n            }\r\n          }\r\n          dataSource={this.state.list}\r\n          columns={columns}/>\r\n          {this.state.addvisible && <DoctorAdd \r\n          addvisible={this.state.addvisible} \r\n          list={this.state.list}/>}  \r\n          {this.state.deletevisible && <DoctorDelete \r\n          doctorid={this.state.doctorid}\r\n          doctorname={this.state.doctorname}\r\n          doctorsex={this.state.doctorsex}\r\n          doctorage={this.state.doctorage}\r\n          doctorphone={this.state.doctorphone}\r\n          doctorposition={this.state.doctorposition}\r\n          doctordepart={this.state.doctordepart}\r\n          doctorproject={this.state.doctorproject} \r\n          deletevisible={this.state.deletevisible}/>}        \r\n          {this.state.editvisible && <DoctorEdit \r\n          doctorid={this.state.doctorid}\r\n          doctorname={this.state.doctorname}\r\n          doctorsex={this.state.doctorsex}\r\n          doctorage={this.state.doctorage}\r\n          doctorphone={this.state.doctorphone}\r\n          doctorposition={this.state.doctorposition}\r\n          doctordepart={this.state.doctordepart}\r\n          doctorproject={this.state.doctorproject} \r\n          editvisible={this.state.editvisible}\r\n          doctorsqlid={this.state.doctorsqlid}/>}          \r\n        </Fragment> \r\n)\r\n  }\r\n}\r\nexport default DoctorListTable;","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctorschedule\\searchBar.js",["226","227"],"import React,{Fragment} from 'react';\r\nimport { Button,Modal,Row,Col, Input,Select, message} from 'antd';\r\nimport \"./style.css\";\r\nimport AdddoctorForm from \"./adddoctorForm\";\r\nimport ScheduleTableComponent from './ScheduleTableComponent';\r\nimport {GetscheduleDateHeader,GetdocScheduleList,GetdepartList,GetprojectList} from '../../service/account'//导入接口\r\nclass SearchBar extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      scheduleDateHeader:[],\r\n      doctorScheduleList:[],\r\n      doctordepart:\"\",\r\n      doctorproject:\"\",\r\n      departlist:[],\r\n      projectlist:[],\r\n      adddocvisible:false\r\n    };\r\n  }\r\n  // mapdeplist=this.state.departlist.map((item,index)=>{\r\n  //   item;\r\n  // })\r\n  componentWillMount() {\r\n    GetdepartList().then(response=>{\r\n      console.log(response.data.data,'1');\r\n      const data=response.data.data;\r\n      if(data){\r\n        var departlist=[];\r\n        for(var i=0,len=data.length;i<len;i++){\r\n          var departdata=data[i];\r\n          departlist.push(departdata.depart)\r\n        }\r\n      }\r\n      this.setState({\r\n        departlist:departlist\r\n      })\r\n      console.log('11111',this.state.departlist);\r\n    }).catch(error=>{\r\n      console.log(error);\r\n      }) \r\n\r\n    // GetprojectList().then(response=>{\r\n    //   const data=response.data.data;\r\n    //   if(data){\r\n    //     var projectlist=[];\r\n    //     for(var i=0,len=data.length;i<len;i++){\r\n    //       var projectdata=data[i];\r\n    //       projectlist.push(projectdata.projectname)\r\n    //     }\r\n    //   }\r\n    //   this.setState({\r\n    //     projectlist:projectlist\r\n    //   })\r\n    //   console.log('projectlist',this.state.projectlist);\r\n    //   console.log(response.data.data,'1');\r\n    //   // this.setState({\r\n    //   //   doctorproject:response.data.data\r\n    //   // })\r\n    // }).catch(error=>{\r\n    //   console.log(error);\r\n    //   })  \r\n\r\n  }\r\n  selectChangedep=(e)=>{\r\n    const requestData={projectdep:e}\r\n    GetprojectList(requestData).then(response=>{\r\n      const data=response.data.data;\r\n      if(data){\r\n        var projectlist=[];\r\n        for(var i=0,len=data.length;i<len;i++){\r\n          var projectdata=data[i];\r\n          projectlist.push(projectdata.projectname)\r\n        }\r\n      }\r\n      this.setState({\r\n        projectlist:projectlist\r\n      })\r\n      console.log('projectlist',this.state.projectlist);\r\n      console.log(response.data.data,'1');\r\n      // this.setState({\r\n      //   doctorproject:response.data.data\r\n      // })\r\n    }).catch(error=>{\r\n      console.log(error);\r\n      })\r\n    this.setState({\r\n      doctordepart:e\r\n    })\r\n  }\r\n  selectChangepro=(e)=>{\r\n    this.setState({\r\n      doctorproject:e\r\n    })\r\n  }\r\n  doctorlistSearch=()=>{\r\n    if(!this.state.doctordepart){\r\n      message.warning(\"请选择科室进行查询！！\")\r\n    }\r\n    if(!this.state.doctorproject){\r\n      message.warning(\"请选择项目进行查询！！\")\r\n    }\r\n    GetscheduleDateHeader().then(response=>{\r\n      console.log(response.data.data,'1');\r\n      this.setState({\r\n        scheduleDateHeader:response.data.data\r\n      })\r\n    }).catch(error=>{\r\n      console.log(error);\r\n      }) \r\n\r\n    const requestData={\r\n      doctordepart:this.state.doctordepart,\r\n      doctorproject:this.state.doctorproject\r\n    }\r\n    GetdocScheduleList(requestData).then(response=>{\r\n      console.log(response.data.data,'1');\r\n      this.setState({\r\n        doctorScheduleList:response.data.data\r\n      })\r\n    }).catch(error=>{\r\n      console.log(error);\r\n      })  \r\n\r\n  }\r\n  addFunc = () => {   \r\n    this.setState({\r\n      adddocvisible:!this.state.adddocvisible\r\n    })\r\n\r\n  }\r\n  render(){\r\n    console.log(this.state.adddocvisible);\r\n    const { Option } = Select;\r\n    return (\r\n      <Fragment>\r\n            <Row>\r\n            <Col span={12}>\r\n                <Col span={10} className='info_label'>医生科室：</Col>\r\n                <Col span={14} className='info_input'>\r\n                <Select defaultValue=\"\" style={{ width: 355 }} \r\n                 onChange={(e) => this.selectChangedep(e)} \r\n                 allowClear={true}\r\n                 value={this.state.doctordepart}>\r\n                   {this.state.departlist.map((value,  label) => (\r\n                    <Option key={value} value={value}>\r\n                      {value}\r\n                    </Option>\r\n                    ))}      \r\n                </Select>\r\n                </Col>\r\n            </Col>\r\n            <Col span={12}>\r\n            <Col span={10} className='info_label'>医生项目：</Col>\r\n              <Col span={14} className='info_input'>\r\n              <Select defaultValue=\"\" style={{ width: 355 }} \r\n              onChange={(e) => this.selectChangepro(e)} \r\n              allowClear={true}\r\n              value={this.state.doctorproject}>\r\n                {this.state.projectlist.map((value,  label) => (\r\n                    <Option key={value} value={value}>\r\n                      {value}\r\n                    </Option>\r\n                    ))}\r\n              </Select>\r\n              </Col>\r\n            </Col>\r\n          </Row>\r\n          <Button\r\n              className=\"button_search\"\r\n              type=\"primary\"\r\n              onClick={this.doctorlistSearch}\r\n            >\r\n              查询\r\n            </Button>\r\n            <Button style={{ display: 'block',marginTop:'10px',marginBottom:'10px'}} \r\n            type='primary' onClick={() => this.addFunc()}><span\r\n              style={{ letterSpacing: '2px' }}>添加医生</span>\r\n          </Button>\r\n          <ScheduleTableComponent\r\n          scheduleDateHeader={this.state.scheduleDateHeader}\r\n          doctorScheduleList={this.state.doctorScheduleList}\r\n          />\r\n          {this.state.adddocvisible && <AdddoctorForm \r\n          doctordepart={this.state.doctordepart}\r\n          doctorproject={this.state.doctorproject}\r\n          adddocvisible={this.state.adddocvisible}\r\n          /> }\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default SearchBar;\r\n","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctorschedule\\schedules.js",["228","229","230","231"],"import React,{Fragment}  from 'react';\r\nimport { Button } from 'antd';\r\nimport {FileAddOutlined } from \"@ant-design/icons\";\r\nimport ScheduleTableComponent from './ScheduleTableComponent';\r\nimport AdddoctorForm from \"./adddoctorForm\";\r\n//import { GetscheduleDateHeader,GetdocScheduleList } from '../../service/account'//导入接口\r\n\r\nclass Schedules extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      scheduleDateHeader:[],\r\n      doctorScheduleList:[],\r\n      adddocvisible:false,\r\n    };\r\n  }\r\n  // componentWillMount() {\r\n  //   GetscheduleDateHeader().then(response=>{\r\n  //     console.log(response.data.data,'1');\r\n  //     this.setState({\r\n  //       scheduleDateHeader:response.data.data\r\n  //     })\r\n  //   }).catch(error=>{\r\n  //     console.log(error);\r\n  //     }) \r\n\r\n  //     // GetdocScheduleList().then(response=>{\r\n  //     //   console.log(response.data.data,'1');\r\n  //     //   this.setState({\r\n  //     //     doctorScheduleList:response.data.data\r\n  //     //   })\r\n  //     // }).catch(error=>{\r\n  //     //   console.log(error);\r\n  //     //   })  \r\n\r\n  // }\r\n\r\n  addFunc = () => {   \r\n    this.setState({\r\n      adddocvisible:!this.state.adddocvisible\r\n    })\r\n  }\r\n  render(){\r\n    return (\r\n      <Fragment>\r\n          {/* <Button style={{ display: 'block',marginTop:'10px'}} \r\n            type='primary' onClick={() => this.addFunc()}><span\r\n              style={{ letterSpacing: '2px' }}><FileAddOutlined />添加医生</span>\r\n          </Button>    */}\r\n          {/* <ScheduleTableComponent\r\n          scheduleDateHeader={this.state.scheduleDateHeader}\r\n          doctorScheduleList={this.state.doctorScheduleList}\r\n          /> */}\r\n          {/* <AdddoctorForm /> */}\r\n      </Fragment>\r\n)\r\n  }\r\n}\r\n\r\n\r\nexport default Schedules;\r\n","C:\\Users\\LENOVO\\Desktop\\online\\src\\utils\\request.js",[],"C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctor\\adddoctor.js",["232","233"],"import React,{Fragment}  from 'react';\r\nimport { Button,Modal,Row,Col, Input,Select, message} from 'antd';\r\nimport store from \"../../store\";\r\nimport {Savedoctorlist,GetdepartList,GetprojectList} from '../../service/account'//导入接口\r\nclass DoctorAdd extends React.Component{\r\n  constructor(props){\r\n    super(props);    \r\n    this.state={\r\n        addvisible:this.props.addvisible,\r\n        departlist:[],\r\n        projectlist:[]\r\n        // list:this.props.list\r\n    }\r\n    store.subscribe(()=>{\r\n      this.setState(store.getState())\r\n  })\r\n  }\r\n  componentWillMount() {\r\n    GetdepartList().then(response=>{\r\n      console.log(response.data.data,'1');\r\n      const data=response.data.data;\r\n      if(data){\r\n        var departlist=[];\r\n        for(var i=0,len=data.length;i<len;i++){\r\n          var departdata=data[i];\r\n          departlist.push(departdata.depart)\r\n        }\r\n      }\r\n      this.setState({\r\n        departlist:departlist\r\n      })\r\n      console.log('11111',this.state.departlist);\r\n    }).catch(error=>{\r\n      console.log(error);\r\n      }) \r\n\r\n    GetprojectList().then(response=>{\r\n      const data=response.data.data;\r\n      if(data){\r\n        var projectlist=[];\r\n        for(var i=0,len=data.length;i<len;i++){\r\n          var projectdata=data[i];\r\n          projectlist.push(projectdata.projectname)\r\n        }\r\n      }\r\n      this.setState({\r\n        projectlist:projectlist\r\n      })\r\n      console.log('projectlist',this.state.projectlist);\r\n      console.log(response.data.data,'1');\r\n      // this.setState({\r\n      //   doctorproject:response.data.data\r\n      // })\r\n    }).catch(error=>{\r\n      console.log(error);\r\n      })  \r\n\r\n  }\r\n  inputChange= (prop, e) =>{\r\n    const action={\r\n      type:\"update-doctorlist\",\r\n      payload: {\r\n        [prop]: e.target.value\r\n      }\r\n    };\r\n    store.dispatch(action);\r\n}\r\n  selectChange= (prop, e) =>{\r\n    if(prop=='doctordepart'){\r\n      const requestData={projectdep:e}\r\n      GetprojectList(requestData).then(response=>{\r\n        const data=response.data.data;\r\n        if(data){\r\n          var projectlist=[];\r\n          for(var i=0,len=data.length;i<len;i++){\r\n            var projectdata=data[i];\r\n            projectlist.push(projectdata.projectname)\r\n          }\r\n        }\r\n        this.setState({\r\n          projectlist:projectlist\r\n        })\r\n        console.log('projectlist',this.state.projectlist);\r\n        console.log(response.data.data,'1');\r\n        // this.setState({\r\n        //   doctorproject:response.data.data\r\n        // })\r\n      }).catch(error=>{\r\n        console.log(error);\r\n        })  \r\n    }\r\n    const action={\r\n      type:\"update-doctorlist\",\r\n      payload: {\r\n        [prop]: e\r\n      }\r\n    };\r\n    store.dispatch(action);\r\n  }\r\n  handleCancel = () => {\r\n    this.setState({  \r\n        addvisible:!this.state.addvisible\r\n    })\r\n  };\r\n  formSubmitEvent = () =>{\r\n    if(!this.state.doctorlist.doctorid){\r\n      return message.warning(\"医生编号不可为空！！！\");\r\n    }\r\n    if(!/^\\d{7}$/g.test(this.state.doctorlist.doctorid)){\r\n      return message.warning(\"请输入7位数字的医生编号！！\")\r\n    }\r\n    if(!this.state.doctorlist.doctorname){\r\n      return message.warning(\"医生姓名不可为空！！！\");\r\n    }\r\n    if(!/^[\\u4e00-\\u9fa5]{0,}$/g.test(this.state.doctorlist.doctorname)){\r\n      return message.warning(\"请输入正确的医生姓名！！\")\r\n    }\r\n    if(!this.state.doctorlist.doctorsex){\r\n      return message.warning(\"医生性别不可为空！！！\");\r\n    }\r\n    if(!this.state.doctorlist.doctorage){\r\n      return message.warning(\"医生年龄不可为空！！！\");\r\n    }\r\n    if(this.state.doctorlist.doctorage>100||this.state.doctorlist.doctorage<18){\r\n      return message.warning(\"请输入正确的医生年龄！！！\");\r\n    }\r\n    if(!this.state.doctorlist.doctorphone){\r\n      return message.warning(\"医生电话不可为空！！！\");\r\n    }\r\n    if(!/^[1][3,4,5,7,8][0-9]{9}$/g.test(this.state.doctorlist.doctorphone)){\r\n      return message.warning(\"请输入正确的手机号！！！\")\r\n    }\r\n    if(!this.state.doctorlist.doctorposition){\r\n      return message.warning(\"医生职位不可为空！！！\");\r\n    }\r\n    if(!this.state.doctorlist.doctordepart){\r\n      return message.warning(\"医生科室不可为空！！！\");\r\n    }\r\n    if(!this.state.doctorlist.doctorproject){\r\n      return message.warning(\"医生所属项目不可为空！！！\");\r\n    }\r\n    const payload={\r\n      doctorid:this.state.doctorlist.doctorid,\r\n      doctorname:this.state.doctorlist.doctorname,\r\n      doctorsex:this.state.doctorlist.doctorsex,\r\n      doctorage:this.state.doctorlist.doctorage,\r\n      doctorphone:this.state.doctorlist.doctorphone,\r\n      doctorposition:this.state.doctorlist.doctorposition,\r\n      doctordepart:this.state.doctorlist.doctordepart,\r\n      doctorproject:this.state.doctorlist.doctorproject\r\n    }\r\n    this.setState({\r\n      addvisible:!this.state.addvisible\r\n    })\r\n    //添加医生后，调用后端接口，把数据传给后端\r\n    const requestData=payload;\r\n    console.log(requestData,'requestData');\r\n    Savedoctorlist(requestData).then(response=>{\r\n      if(response.data.rescode == 1){\r\n        message.success(response.data.message);\r\n      }else{\r\n        message.warning(response.data.message);\r\n      }\r\n      this.setState({\r\n        list:response.data.data\r\n      })\r\n    }).catch(error=>{\r\n        console.log(error)\r\n    })\r\n\r\n  // Getdoctorlist(list).then(response=>{\r\n  //   const list=response.data.data;\r\n  //   this.setState({\r\n  //     list\r\n  //   })\r\n  // }).catch(error=>{\r\n  // })\r\n\r\n    console.log(payload,'payload');\r\n  }\r\n  closeModalEvent = () =>{\r\n    this.setState({\r\n      addvisible:false\r\n  })\r\n  }\r\n  render(){\r\n    const { Option } = Select;\r\n    return (\r\n        <Fragment>\r\n          <Modal title=\"添加医生\" visible={this.state.addvisible} onCancel={this.handleCancel} footer={null}>\r\n            <div>\r\n            <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            医生编号：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input\r\n                       onChange={(e) => this.inputChange('doctorid',e)} value={this.state.doctorid}\r\n                       placeholder=\"请输入医生编号\"\r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            医生姓名：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input\r\n                       onChange={(e) => this.inputChange('doctorname',e)} value={this.state.doctorname}\r\n                       placeholder=\"请输入医生姓名\"\r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            医生性别：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                    <Select defaultValue=\"男\" style={{ width: 355 }} onChange={(e) => this.selectChange('doctorsex',e)}  value={this.state.doctorsex}>\r\n                    <Option value=\"男\">男</Option>\r\n                    <Option value=\"女\">女</Option>\r\n                    </Select>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            医生年龄：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input\r\n                       onChange={(e) => this.inputChange('doctorage',e)} value={this.state.doctorage}\r\n                       placeholder=\"请输入医生年龄\"\r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            电话号码：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input\r\n                       onChange={(e) => this.inputChange('doctorphone',e)} value={this.state.doctorphone}\r\n                       placeholder=\"请输入医生电话号码\"\r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            医生职位：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input\r\n                       onChange={(e) => this.inputChange('doctorposition',e)} value={this.state.doctorposition}\r\n                       placeholder=\"请输入医生职位\"\r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            医生科室：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                    {/* <Select defaultValue=\"\" style={{ width: 355 }}  onChange={(e) => this.selectChange('doctordepart',e)} value={this.state.doctordepart}>\r\n                    <Option value=\"man\">骨科</Option>\r\n                    <Option value=\"woman\">儿科</Option>\r\n                    </Select> */}\r\n                    <Select defaultValue=\"\" style={{ width: 355 }} \r\n                    onChange={(e) => this.selectChange('doctordepart',e)}\r\n                    value={this.state.doctordepart}>\r\n                      {this.state.departlist.map((value,  label) => (\r\n                        <Option key={value} value={value}>\r\n                          {value}\r\n                        </Option>\r\n                        ))}      \r\n                    </Select>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            医生项目：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                    {/* <Select defaultValue=\"\" style={{ width: 355 }} onChange={(e) => this.selectChange('doctorproject',e)} value={this.state.doctorproject}>\r\n                    <Option value=\"man\">111</Option>\r\n                    <Option value=\"woman\">222</Option>\r\n                    </Select> */}\r\n                    <Select defaultValue=\"\" style={{ width: 355 }} \r\n                    onChange={(e) => this.selectChange('doctorproject',e)}\r\n                    value={this.state.doctorproject}>\r\n                      {this.state.projectlist.map((value,  label) => (\r\n                          <Option key={value} value={value}>\r\n                            {value}\r\n                          </Option>\r\n                          ))}\r\n                    </Select>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <div className=\"buttonmain\">\r\n                  <Button\r\n                    className=\"buttonsave_content\"\r\n                    type=\"primary\"\r\n                    onClick={this.formSubmitEvent}\r\n                  >\r\n                    <span style={{ letterSpacing: '2px' }}>保存</span>\r\n                  </Button>\r\n                  <Button\r\n                    className=\"buttoncancel_content\"\r\n                    onClick={this.closeModalEvent}\r\n                  >\r\n                    <span style={{ letterSpacing: '2px' }}>\r\n                      取消\r\n                    </span>\r\n                  </Button>\r\n                </div>\r\n            </div>\r\n          </Modal>\r\n        </Fragment>\r\n      );\r\n    };\r\n  }\r\nexport default DoctorAdd;","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctor\\editdoctor.js",[],"C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctor\\deletedoctor.js",["234","235"],"import React,{Fragment}  from 'react';\r\nimport { Button,Modal,Row,Col, Input,Select,Popconfirm,message} from 'antd';\r\nimport {Deletedoctorlist} from '../../service/account'//导入接口\r\nimport store from \"../../store\";\r\nclass DoctorDelete extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n        doctorid:this.props.doctorid,\r\n        doctorname:this.props.doctorname,\r\n        doctorsex:this.props.doctorsex,\r\n        doctorage:this.props.doctorage,\r\n        doctorphone:this.props.doctorphone,\r\n        doctorposition:this.props.doctorposition,\r\n        doctordepart:this.props.doctordepart,\r\n        doctorproject:this.props.doctorproject,\r\n        deletevisible:this.props.deletevisible,\r\n        edittype:this.props.edittype\r\n    }\r\n  }\r\n  handleCancel = () => {\r\n    this.setState({   \r\n        deletevisible:!this.state.deletevisible\r\n    })\r\n  };\r\n  confirm=()=>{\r\n    const payload={\r\n      doctorid:this.state.doctorid,\r\n      doctorname:this.state.doctorname,\r\n      doctorsex:this.state.doctorsex,\r\n      doctorage:this.state.doctorage,\r\n      doctorphone:this.state.doctorphone,\r\n      doctorposition:this.state.doctorposition,\r\n      doctordepart:this.state.doctordepart,\r\n      doctorproject:this.state.doctorproject\r\n    }\r\n    const requestData = payload;\r\n    this.setState({\r\n      deletevisible:!this.state.deletevisible\r\n    })\r\n    Deletedoctorlist(requestData).then(response=>{\r\n      if(response.data.rescode==1){\r\n        message.success(response.data.message);\r\n      }else{\r\n        message.error(response.data.message)\r\n      }\r\n    }).catch(error=>{\r\n        console.log(error)\r\n    })\r\n    console.log(payload);\r\n  }\r\n  cancel=()=>{\r\n    console.log('cancel');\r\n  }\r\n  // formDeleteEvent = () =>{\r\n  //   const payload={\r\n  //     doctorid:this.state.doctorid,\r\n  //     doctorname:this.state.doctorname,\r\n  //     doctorsex:this.state.doctorsex,\r\n  //     doctorage:this.state.doctorage,\r\n  //     doctorphone:this.state.doctorphone,\r\n  //     doctorposition:this.state.doctorposition,\r\n  //     doctordepart:this.state.doctordepart,\r\n  //     doctorproject:this.state.doctorproject\r\n  //   }\r\n  //   const requestData = payload;\r\n  //   this.setState({\r\n  //     deletevisible:!this.state.deletevisible\r\n  //   })\r\n  //   Deletedoctorlist(requestData).then(response=>{\r\n  //     console.log(response.data.data);\r\n  //   }).catch(error=>{\r\n  //       console.log(error)\r\n  //   })\r\n  //   console.log(payload);\r\n  // }\r\n  closeModalEvent = () =>{\r\n    this.setState({\r\n      editvisible:false\r\n  })\r\n  };\r\n  render(){\r\n    const { Option } = Select;\r\n    return (\r\n        <Fragment>\r\n          <Modal title=\"删除医生\" visible={this.state.deletevisible} onCancel={this.handleCancel} footer={null}>\r\n            <div>\r\n            <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            医生编号：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input disabled={true} value={this.state.doctorid}\r\n                       placeholder=\"请输入医生编号\"\r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            医生姓名：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input disabled={true} value={this.state.doctorname}\r\n                       placeholder=\"请输入医生姓名\"\r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            医生性别1：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                    <Select defaultValue=\"man\" disabled={true} style={{ width: 355 }} value={this.state.doctorsex}>\r\n                    <Option value=\"man\">男</Option>\r\n                    <Option value=\"woman\">女</Option>\r\n                    </Select>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            医生年龄：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input disabled={true}\r\n                       value={this.state.doctorage}\r\n                       placeholder=\"请输入医生年龄\"\r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            电话号码：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input disabled={true}\r\n                       value={this.state.doctorphone}\r\n                       placeholder=\"请输入医生电话号码\"\r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            医生职位：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input disabled={true}\r\n                       value={this.state.doctorposition}\r\n                       placeholder=\"请输入医生职位\"\r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            医生科室：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                    <Select defaultValue=\"\" style={{ width: 355 }} disabled={true} value={this.state.doctordepart}>\r\n                    <Option value=\"man\">骨科</Option>\r\n                    <Option value=\"woman\">儿科</Option>\r\n                    </Select>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            医生项目：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                    <Select defaultValue=\"\" style={{ width: 355 }} disabled={true} value={this.state.doctorproject}>\r\n                    <Option value=\"man\">111</Option>\r\n                    <Option value=\"woman\">222</Option>\r\n                    </Select>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <div className=\"buttonmain\">\r\n                <Popconfirm\r\n                  title=\"是否删除这项数据?\"\r\n                  onConfirm={this.confirm}\r\n                  onCancel={this.cancel}\r\n                  okText=\"是\"\r\n                  cancelText=\"否\"\r\n                >\r\n                  <Button\r\n                    className=\"buttonsave_content\"\r\n                    type=\"danger\"\r\n                    // onClick={this.formDeleteEvent}\r\n                  >\r\n                    <span style={{ letterSpacing: '2px' }}>删除</span>\r\n                  </Button>\r\n                  </Popconfirm>\r\n                  <Button\r\n                    className=\"buttoncancel_content\"\r\n                    onClick={this.handleCancel}\r\n                  >\r\n                    <span style={{ letterSpacing: '2px' }}>\r\n                      取消\r\n                    </span>\r\n                  </Button>\r\n                </div>\r\n            </div>\r\n          </Modal>\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\nexport default DoctorDelete;","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctorschedule\\ScheduleTableComponent.js",["236","237","238","239","240","241"],"import React, { Fragment } from 'react';\r\n// import {Icon} from 'antd';\r\n// import Icon from '@ant-design/icons';\r\n// import { Icon } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport EditSchedule from \"./editschedule\";\r\nimport \"./style.css\"\r\nclass ScheduleTableComponent extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      scheduleDateHeader:this.props.scheduleDateHeader,\r\n      doctorScheduleList:this.props.doctorScheduleList,\r\n      editschedulevisible:false,\r\n      docid:\"\",\r\n      date:\"\",\r\n      details:\"\"\r\n    };\r\n  };\r\n\r\n  // componentWillMount() {\r\n  //   this.setState({\r\n  //     scheduleDateHeader:this.state.scheduleDateHeader\r\n  //   })\r\n  // }\r\n  getScheduleCells=(docid,infos)=>{\r\n    if (!infos) return null;\r\n    return infos.map((item,index)=>{\r\n      if(item===null){\r\n        return <div key={index} />;\r\n      }else{\r\n        const {details,date}=item;\r\n        return (\r\n          <Fragment>\r\n            <div key={date} \r\n            className=\"scheduleCell\" \r\n            onDoubleClick={() => this.editSchedule(docid, date, details)}>\r\n            {this.getScheduleCellsDetail(details,docid)}\r\n            </div>         \r\n          </Fragment>\r\n        )\r\n      }\r\n    })\r\n    console.log(1);\r\n  }\r\n  getScheduleCellsDetail=(details,docid)=>{\r\n    if(!details) return null;\r\n    return details.map((item,index)=>{\r\n      const {registrationFee,registrationNum} = item;\r\n      return (\r\n        <div key={docid} className=\"timeRow\">\r\n          <div>\r\n          （{registrationNum}）\r\n          ¥{registrationFee}\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n  editSchedule=(docid, date, details)=>{\r\n    this.setState({\r\n      editschedulevisible:!this.state.editschedulevisible,\r\n      docid:docid,\r\n      date:date,\r\n      details:details\r\n    })\r\n    console.log('123',docid,date,details);\r\n  }\r\n  // editDoctor=( docid, name, title )=>{\r\n  //   console.log('1');\r\n  // }\r\n  \r\n  render(){\r\n    const row=this.props.doctorScheduleList.map((item, index) => {\r\n      console.log('item',item);\r\n      const {docid,infos,name,registrationFeeone,registrationNumone,\r\n        registrationFeetwo,registrationNumtwo\r\n      }=item;\r\n      \r\n      return (\r\n        <div className=\"scheduleRow\">\r\n        <div key={index} className=\"docCell\">\r\n            {/* {\r\n              // <Icon\r\n              //   type=\"form\"\r\n              //   style={{ color: '#188EF2', marginRight: '5px' }}\r\n              //   // onClick={() => editDoctor({ docId, name, title })}\r\n              // />\r\n               <DeleteOutlined style={{marginRight: '5px'}}/>\r\n            } */}\r\n            <span>\r\n            {/* <DeleteOutlined style={{marginLeft:'-100px'}} \r\n            onClick={() => this.editDoctor({ docid, name })}/> */}\r\n              {name}\r\n            </span>\r\n          </div>\r\n          {this.getScheduleCells(docid,infos)}\r\n          {/* <div>\r\n            <div className=\"feeandnum_form\">\r\n            （{registrationFeeone}）\r\n            ¥{registrationNumone}\r\n            </div>\r\n            <div className=\"feeandnum_form\">\r\n            （{registrationFeetwo}）\r\n            ¥{registrationNumtwo}\r\n            </div>\r\n          </div> */}\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <Fragment>\r\n        <div className=\"scheduleTable\"> \r\n        <div className=\"docScheduleTitleRow\">     \r\n          <div>医生</div>\r\n          {/* <div>{this.state.columns}</div> */}\r\n          {this.props.scheduleDateHeader &&\r\n            this.props.scheduleDateHeader.map((item, index) => {\r\n              const { week, date } = item;\r\n              return (\r\n                <div key={date}>\r\n                  <p>\r\n                    {week.replace('星期', '周')}（{date.substring(5)}）\r\n                  </p>\r\n                </div>\r\n              );\r\n            })}\r\n       </div>\r\n       {this.props.doctorScheduleList.length ? (\r\n          <div className=\"scheduleContent\">{row}</div>\r\n        ) : (\r\n          <div className=\"noSchedule\">暂无数据</div>\r\n        )}\r\n       </div> \r\n       {\r\n         this.state.editschedulevisible &&\r\n         <EditSchedule\r\n         editschedulevisible={this.state.editschedulevisible}\r\n         docid={this.state.docid}\r\n         date={this.state.date}\r\n         details={this.state.details}\r\n         />\r\n       }\r\n      </Fragment>   \r\n)\r\n  }\r\n}\r\nexport default ScheduleTableComponent;\r\n","C:\\Users\\LENOVO\\Desktop\\online\\src\\store\\index.js",["242","243"],"//import _default from 'antd/lib/checkbox/Group';\r\nimport { createStore ,applyMiddleware,compose} from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst composeEnhancers =\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({ }) : compose;\r\n// const enhancer = composeEnhancers(\r\n//     applyMiddleware(thunk))\r\n\r\n// const store=createStore(\r\n    // reducer,\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    // );\r\n    // sagaMiddleware.run(todoSagas))\r\n    const store=createStore(reducer);\r\nexport default store;","C:\\Users\\LENOVO\\Desktop\\online\\src\\store\\reducer.js",["244"],"const defaultStatus={\r\n    form: {\r\n        doctorid: '',\r\n        doctorname:'',\r\n        doctorphone:'',\r\n        doctorposition:'',\r\n        doctordepart:''\r\n    },\r\n    doctorlist:{\r\n        doctorid:'1',\r\n        doctorname:'',\r\n        doctorsex:'男',\r\n        doctorage:'',\r\n        doctorphone:'',\r\n        doctorposition:'',\r\n        doctordepart:'',\r\n        doctorproject:''\r\n    }\r\n}\r\nexport default(state=defaultStatus,action)=>{\r\n    if(action.type===\"update-form\"){\r\n        return {\r\n            ...state,\r\n            form: {\r\n                ...state.form,\r\n                ...action.payload\r\n            }\r\n        }\r\n        \r\n    }\r\n    if(action.type===\"update-doctorlist\"){\r\n        return {\r\n            ...state,\r\n            doctorlist: {\r\n                ...state.doctorlist,\r\n                ...action.payload\r\n            }\r\n        }\r\n    }\r\n}",["245","246"],"C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctorschedule\\adddoctorForm.js",["247","248","249"],"import React,{Fragment}  from 'react';\r\nimport { Modal,Input,Row,Col,Select,message } from 'antd';\r\nimport {GetScheduleDoctor,SaveScheduleDoctor} from '../../service/account'//导入接口\r\nclass AdddoctorForm extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n        adddocvisible:this.props.adddocvisible,\r\n        doctorname:\"\",\r\n        docid:\"\",\r\n        date:\"\",\r\n        week:\"\",\r\n        registrationFee:0,\r\n        registrationNum:0,\r\n        doctorschedulelist:[],\r\n        doctoridschedulelist:[]\r\n    }\r\n  }\r\n  componentWillMount() {   \r\n    const requestData={\r\n        doctordepart:this.props.doctordepart,\r\n        doctorproject:this.props.doctorproject\r\n      }\r\n      GetScheduleDoctor(requestData).then(response=>{\r\n        const data=response.data.data;\r\n        if(data){\r\n          var doctorschedulelist=[];\r\n          var doctoridschedulelist=[];\r\n          for(var i=0,len=data.length;i<len;i++){\r\n            var doctorscheduledata=data[i];\r\n            doctorschedulelist.push(doctorscheduledata.doctorname);\r\n            doctoridschedulelist.push(doctorscheduledata.doctorid);\r\n\r\n          }\r\n        }\r\n        this.setState({\r\n            doctorschedulelist:doctorschedulelist,\r\n            doctoridschedulelist:doctoridschedulelist\r\n          })\r\n          console.log(this.state.doctorschedulelist,'dada')\r\n      }).catch(error=>{\r\n        console.log(error);\r\n        })  \r\n  }\r\n\r\n  handleOk=()=>{\r\n    const payload={\r\n      doctordepart:this.props.doctordepart,\r\n      doctorproject:this.props.doctorproject,\r\n      name:this.state.doctorname,\r\n      docid:this.state.docid\r\n    }\r\n    console.log('mll',payload);\r\n    const requestData=payload;\r\n    SaveScheduleDoctor(requestData).then(response=>{\r\n      if(response.data.rescode == 1){\r\n        message.success(response.data.message)\r\n      }else{\r\n        message.warning(response.data.message)\r\n      }\r\n      \r\n      console.log(response.data.data);\r\n\r\n    }).catch(error=>{\r\n        console.log(error)\r\n    })\r\n      this.setState({\r\n        adddocvisible:!this.state.adddocvisible\r\n      })\r\n   \r\n  }\r\n  handleCancel=()=>{\r\n    this.setState({\r\n        adddocvisible:!this.state.adddocvisible\r\n      })\r\n  }\r\n  selectChange=(e)=>{\r\n      this.setState({\r\n          doctorname:e,      \r\n      })\r\n      this.state.doctorschedulelist.map((item,index)=>{\r\n        if(item==e){\r\n          this.setState({\r\n            docid:this.state.doctoridschedulelist[index]\r\n          })\r\n        }\r\n      })\r\n  }\r\n\r\n  render(){\r\n      const { Option } = Select;\r\n    return (\r\n        <Fragment>\r\n              <Modal title=\"添加医生\" visible={this.state.adddocvisible} onOk={this.handleOk} onCancel={this.handleCancel}>\r\n                <div>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            医生科室：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input disabled={true} value={this.props.doctordepart}\r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            医生项目：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input disabled={true} value={this.props.doctorproject}\r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            医生姓名：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                    <Select defaultValue=\"\" style={{ width: 355 }} \r\n                        onChange={(e) => this.selectChange(e)} \r\n                        //  options={this.state.departlist.toString()}\r\n                        value={this.state.doctorname}>\r\n                            {this.state.doctorschedulelist.map((value,  label) => (\r\n                              \r\n                            <Option key={value} value={value}>\r\n                            {value}\r\n                            </Option>\r\n                            ))}\r\n                    </Select>\r\n                    </Col>\r\n                </Row>\r\n                </div>\r\n            </Modal>\r\n        </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default AdddoctorForm;\r\n","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\doctorschedule\\editschedule.js",["250","251"],"import React,{Fragment}  from 'react';\r\nimport { Modal,Input,Row,Col,Select, message } from 'antd';\r\nimport {GetdocScheduleList,SaveEditSchedule} from '../../service/account'//导入接口\r\nclass EditSchedule extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      editschedulevisible:this.props.editschedulevisible,\r\n      docid:this.props.docid,\r\n      date:this.props.date,\r\n      registrationFee:this.props.details[0].registrationFee,\r\n      registrationNum:this.props.details[0].registrationNum\r\n    }\r\n  }\r\n\r\n\r\n  handleOk=()=>{\r\n    const requestData={\r\n      docid:this.state.docid,\r\n      date:this.state.date,\r\n      registrationFee:this.state.registrationFee,\r\n      registrationNum:this.state.registrationNum\r\n    }\r\n    console.log('rere',requestData);\r\n    SaveEditSchedule(requestData).then(response=>{   \r\n      message.success(response.data.message);\r\n    }).catch(error=>{\r\n        console.log(error)\r\n    })\r\n    \r\n    //点击保存后需要重新渲染页面\r\n\r\n    // GetdocScheduleList(requestData).then(response=>{\r\n    //   console.log(response.data.data,'1');\r\n    //   this.setState({\r\n    //     doctorScheduleList:response.data.data\r\n    //   })\r\n    // }).catch(error=>{\r\n    //   console.log(error);\r\n    //   }) \r\n\r\n      this.setState({\r\n        editschedulevisible:!this.state.editschedulevisible\r\n      })\r\n  }\r\n  handleCancel=()=>{\r\n    this.setState({\r\n      editschedulevisible:!this.state.editschedulevisible\r\n      })\r\n  }\r\n  inputchangenum=(e)=>{\r\n    this.setState({\r\n      registrationNum:e.target.value\r\n    })\r\n  }\r\n  inputchangefee=(e)=>{\r\n    this.setState({\r\n      registrationFee:e.target.value\r\n    })\r\n  }\r\n\r\n\r\n  render(){\r\n    // console.log(this.props.details[0].registrationNum,'000');\r\n    return (\r\n        <Fragment>\r\n              <Modal title=\"排班管理\"\r\n               visible={this.state.editschedulevisible} \r\n               onOk={this.handleOk} \r\n               onCancel={this.handleCancel}>\r\n                <div>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            挂号数量：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input\r\n                       onChange={this.inputchangenum}\r\n                       value={this.state.registrationNum}\r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            挂号费用：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input \r\n                       onChange={this.inputchangefee}\r\n                        value={this.state.registrationFee}\r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                </div>\r\n            </Modal>\r\n        </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default EditSchedule;\r\n","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\depart\\index.js",["252","253","254","255","256"],"import React,{Fragment} from 'react';\r\nimport { Table,Button } from 'antd';\r\nimport {Switch,Route, HashRouter} from 'react-router-dom';\r\nimport {PlusOutlined } from \"@ant-design/icons\";\r\nimport DepartAdd from \"./adddepart\";\r\nimport DepartEdit from \"./editdepart\";\r\nimport DepartDelete from \"./deletedepart\";\r\nimport {GetdepartList} from '../../service/account'//导入接口\r\n\r\nclass DepartList extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      list:[],\r\n      addvisible:false,\r\n      editvisible:false,\r\n      deletevisible:false,\r\n      depart:\"\",\r\n      departid:\"\",\r\n      departsqlid:\"\"\r\n    };\r\n  }\r\n  //生命周期的使用\r\n  componentWillMount() {\r\n    GetdepartList().then(response=>{\r\n      const list=response.data.data;\r\n      this.setState({\r\n        list\r\n      })\r\n    }).catch(error=>{\r\n    })\r\n  }\r\n  editFunc=(record)=>{\r\n    const departsqlid = record._id;\r\n    const {depart,departid}=record;\r\n    this.setState({\r\n      depart,\r\n      departid,\r\n      departsqlid,\r\n      editvisible:!this.state.editvisible\r\n    })\r\n  }\r\n  deleteFunc=(record)=>{\r\n    const {depart,departid}=record;\r\n    this.setState({\r\n      depart,\r\n      departid,\r\n      deletevisible:!this.state.deletevisible\r\n    })\r\n  }\r\n  addFunc=()=>{\r\n    this.setState({\r\n      addvisible:!this.state.addvisible,    \r\n    })\r\n  }\r\n\r\n  render(){\r\n    const columns=[\r\n      {\r\n        title: '科室编号 ',\r\n        width: 120,\r\n        dataIndex: 'departid',\r\n        key: 'departid',\r\n      },\r\n      {\r\n        title: '科室名称 ',\r\n        width: 120,\r\n        dataIndex: 'depart',\r\n        key: 'depart',\r\n      },\r\n      {\r\n        title: '操作',\r\n        fixed:'right',\r\n        width: 60,\r\n        dataIndex: 'editdep',\r\n        key: 'editdep',\r\n        render: (text, record) => {\r\n          return (\r\n            <a onClick={() => this.editFunc(record)}>编辑</a>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        title: '操作',\r\n        fixed:'right',\r\n        width: 60,\r\n        dataIndex: 'deletedep',\r\n        key: 'deletedep',\r\n        render: (text, record) => {\r\n          return (\r\n            <a onClick={() => this.deleteFunc(record)}>删除</a>\r\n          );\r\n        }\r\n      },\r\n    ]\r\n    return (\r\n      <Fragment>\r\n          <Button style={{ display: 'block',marginBottom:'10px'}} \r\n            type='primary' onClick={() => this.addFunc()}>\r\n              <span\r\n              style={{ letterSpacing: '2px' }}><PlusOutlined />添加\r\n              </span>\r\n          </Button>\r\n          <Table\r\n          columns={columns}\r\n          dataSource={this.state.list}\r\n          />\r\n          {this.state.addvisible && <DepartAdd \r\n          addvisible={this.state.addvisible} \r\n          />}\r\n          {this.state.editvisible && <DepartEdit \r\n          editvisible={this.state.editvisible}\r\n          departsqlid={this.state.departsqlid}\r\n          depart={this.state.depart}\r\n          departid={this.state.departid}/>}  \r\n          {this.state.deletevisible && <DepartDelete \r\n          deletevisible={this.state.deletevisible}\r\n          depart={this.state.depart}\r\n          departid={this.state.departid}/>} \r\n\r\n      </Fragment>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default DepartList;\r\n","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\project\\index.js",["257","258","259","260","261","262"],"import React,{Fragment} from 'react';\r\nimport { Table,Button,Row,Col,Input, Select } from 'antd';\r\nimport {Switch,Route, HashRouter} from 'react-router-dom';\r\nimport {PlusOutlined } from \"@ant-design/icons\";\r\nimport ProjectAdd from \"./addproject\";\r\nimport ProjectEdit from \"./editproject\";\r\nimport ProjectDelete from \"./deleteproject\";\r\nimport {GetAllprojectList,GetprojectList,GetdepartList} from '../../service/account'//导入接口\r\n\r\nclass ProjectList extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      list:[],\r\n      departlist:[],\r\n      projectlist:[],\r\n      addvisible:false,\r\n      editvisible:false,\r\n      deletevisible:false,\r\n      projectid:\"\",\r\n      projectname:\"\",\r\n      projectdep:\"\",\r\n      projectsqlid:\"\"\r\n    };\r\n  }\r\n  //生命周期的使用\r\n  componentWillMount() {\r\n    GetAllprojectList().then(response=>{\r\n      const list=response.data.data;\r\n      this.setState({\r\n        list\r\n      })\r\n    }).catch(error=>{\r\n    })\r\n\r\n    GetdepartList().then(response=>{\r\n      console.log(response.data.data,'1');\r\n      const data=response.data.data;\r\n      if(data){\r\n        var departlist=[];\r\n        for(var i=0,len=data.length;i<len;i++){\r\n          var departdata=data[i];\r\n          departlist.push(departdata.depart)\r\n        }\r\n      }\r\n      this.setState({\r\n        departlist:departlist\r\n      })\r\n      console.log('11111',this.state.departlist);\r\n    }).catch(error=>{\r\n      console.log(error);\r\n      }) \r\n  }\r\n  editFunc=(record)=>{\r\n    const projectsqlid = record._id;\r\n    const {projectid,projectname,projectdep}=record;\r\n    this.setState({\r\n      projectid,\r\n      projectname,\r\n      projectdep,\r\n      projectsqlid,\r\n      editvisible:!this.state.editvisible\r\n    })\r\n  }\r\n  deleteFunc=(record)=>{\r\n    const {projectid,projectname,projectdep}=record;\r\n    this.setState({\r\n      projectid,\r\n      projectname,\r\n      projectdep,\r\n      deletevisible:!this.state.deletevisible\r\n    })\r\n  }\r\n  addFunc=()=>{\r\n    this.setState({\r\n      addvisible:!this.state.addvisible,    \r\n    })\r\n  }\r\n  projectlistSearch=()=>{\r\n    //选择特定的科室，进行列表的更新\r\n    const requestData={projectdep:this.state.projectdep}\r\n    GetprojectList(requestData).then(response=>{\r\n      const data=response.data.data;\r\n      const list=response.data.data;\r\n      this.setState({\r\n        list\r\n      })\r\n      if(data){\r\n        var projectlist=[];\r\n        for(var i=0,len=data.length;i<len;i++){\r\n          var projectdata=data[i];\r\n          projectlist.push(projectdata.project)\r\n        }\r\n      }\r\n      this.setState({\r\n        projectlist:projectlist\r\n      })\r\n      console.log('projectlist',this.state.projectlist);\r\n      console.log(response.data.data,'1');\r\n      // this.setState({\r\n      //   doctorproject:response.data.data\r\n      // })\r\n    }).catch(error=>{\r\n      console.log(error);\r\n      }) \r\n  }\r\n  selectChangedep=(e)=>{\r\n    this.setState({\r\n      projectdep:e\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const {Option} = Select;\r\n    const columns=[\r\n      {\r\n        title: '项目编号 ',\r\n        width: 120,\r\n        dataIndex: 'projectid',\r\n        key: 'projectid',\r\n      },\r\n      {\r\n        title: '项目名称 ',\r\n        width: 120,\r\n        dataIndex: 'projectname',\r\n        key: 'projectname',\r\n      },\r\n      {\r\n        title: '项目所属科室 ',\r\n        width: 120,\r\n        dataIndex: 'projectdep',\r\n        key: 'projectdep',\r\n      },\r\n      {\r\n        title: '操作',\r\n        fixed:'right',\r\n        width: 60,\r\n        dataIndex: 'editdep',\r\n        key: 'editdep',\r\n        render: (text, record) => {\r\n          return (\r\n            <a onClick={() => this.editFunc(record)}>编辑</a>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        title: '操作',\r\n        fixed:'right',\r\n        width: 60,\r\n        dataIndex: 'deletedep',\r\n        key: 'deletedep',\r\n        render: (text, record) => {\r\n          return (\r\n            <a onClick={() => this.deleteFunc(record)}>删除</a>\r\n          );\r\n        }\r\n      },\r\n    ]\r\n    return (\r\n      <Fragment>\r\n          <Row style={{marginBottom:\"20px\"}}>\r\n            <Col span={12}>\r\n                <Col span={10} className='info_label'>所属科室：</Col>\r\n                <Col span={14} className='info_input'>\r\n                <Select defaultValue=\"\" style={{ width: 355 }} \r\n                 onChange={(e) => this.selectChangedep(e)} \r\n                //  options={this.state.departlist.toString()}\r\n                 value={this.state.projectdep}>\r\n                   {this.state.departlist.map((value,  label) => (\r\n                    <Option key={value} value={value}>\r\n                      {value}\r\n                    </Option>\r\n                    ))}                  \r\n                </Select>\r\n                </Col>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Button\r\n                // className=\"button_search\"\r\n                type=\"primary\"\r\n                style={{marginRight:\"100px\",marginTop:\"10px\"}}\r\n                onClick={this.projectlistSearch}\r\n              >\r\n                查询\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Button style={{ display: 'block',marginBottom:'10px'}} \r\n            type='primary' onClick={() => this.addFunc()}>\r\n              <span\r\n              style={{ letterSpacing: '2px' }}><PlusOutlined />添加\r\n              </span>\r\n          </Button>\r\n          <Table\r\n          columns={columns}\r\n          dataSource={this.state.list}\r\n          />\r\n          {this.state.addvisible && <ProjectAdd \r\n          addvisible={this.state.addvisible} \r\n          />}\r\n          {this.state.editvisible && <ProjectEdit \r\n          editvisible={this.state.editvisible}\r\n          projectid={this.state.projectid}\r\n          projectname={this.state.projectname}\r\n          projectdep={this.state.projectdep}\r\n          projectsqlid={this.state.projectsqlid}/>}  \r\n          {this.state.deletevisible && <ProjectDelete\r\n          deletevisible={this.state.deletevisible}\r\n          projectid={this.state.projectid}\r\n          projectname={this.state.projectname}\r\n          projectdep={this.state.projectdep}/>} \r\n\r\n      </Fragment>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default ProjectList;\r\n","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\registerinformation\\index.js",["263","264","265","266","267","268"],"import React,{Fragment} from 'react';\r\nimport moment from 'moment';\r\nimport RegisterInformationEdit from \"./editregisterinformation\";\r\nimport { Table,Button,Row,Col,Input, Select,DatePicker, message } from 'antd';\r\nimport {Getregisterinformationlist} from '../../service/account'//导入接口\r\nimport {Switch,Route, HashRouter} from 'react-router-dom';\r\nclass RegisterList extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      list:[],    \r\n      patientname:\"\",\r\n      patientphone:\"\",\r\n      patientid:\"\",\r\n      depname:\"\",\r\n      projectname:\"\",\r\n      doctorname:\"\",\r\n      registerdate:\"\",\r\n      registerstatus:\"\",\r\n      registersqlid:\"\",\r\n      editvisible:false\r\n    };\r\n  }\r\n  \r\n  componentWillMount() {\r\n    Getregisterinformationlist().then(response=>{\r\n      const list=response.data.data;\r\n      this.setState({\r\n        list\r\n      })\r\n    }).catch(error=>{\r\n    })\r\n  }\r\n  changeInputname=(e)=>{\r\n    this.setState({\r\n      patientname:e.target.value\r\n    })\r\n  }\r\n  changeInputid=(e)=>{\r\n    this.setState({\r\n      patientid:e.target.value\r\n    })\r\n  }\r\n  changeInputids=(e)=>{\r\n    this.setState({\r\n      registerdate:e\r\n    })\r\n  }\r\n  onChange=(date, dateString) =>{\r\n    const dateFormat = 'YYYY-MM-DD';\r\n    const data=moment(dateString);\r\n    this.setState({\r\n      registerdate:data\r\n    });\r\n    // this.setState({\r\n    //   registerdate:this.state.registerdate.format(dateFormat)\r\n    // })\r\n    console.log(1);\r\n  }\r\n  editFunc=(record)=>{\r\n    console.log(record);\r\n    const registersqlid = record._id;\r\n    //日期对象不能直接显示，需要转换为Moment对象\r\n    const registerdate=moment(record.registerdate);\r\n    const {patientname,patientphone,patientid,depname,projectname,doctorname,registerstatus}=record;\r\n    this.setState({\r\n      patientname,\r\n      patientphone,\r\n      patientid,\r\n      depname,\r\n      projectname,\r\n      doctorname,\r\n      registerdate,\r\n      registerstatus,\r\n      registersqlid,\r\n      editvisible:!this.state.editvisible\r\n    })\r\n  }\r\n  registerlistSearch=()=>{\r\n    const dateFormat = 'YYYY-MM-DD';\r\n    const datefor=this.state.registerdate;\r\n    if(!this.state.patientname){\r\n      return message.warning(\"请输入患者姓名！！\")\r\n    }\r\n    if(!this.state.patientid){\r\n      return message.warning(\"请输入患者身份证号！！\")\r\n    }\r\n    if(!this.state.registerdate){\r\n      return message.warning(\"请选择预约日期！！\")\r\n    }\r\n    const requestData = {\r\n      action:\"query\",\r\n      patientname:this.state.patientname,\r\n      patientid:this.state.patientid,\r\n      registerdate:moment(datefor).format(dateFormat)\r\n    }\r\n    Getregisterinformationlist(requestData).then(response=>{\r\n      const list=response.data.data;\r\n      this.setState({\r\n        list\r\n      })\r\n    }).catch(error=>{\r\n    })\r\n    console.log('request',requestData);\r\n  }\r\n  render(){\r\n    console.log(this.state,'44');\r\n    const columns=[\r\n      {\r\n        title: '患者姓名 ',\r\n        width: 120,\r\n        fixed:'left',\r\n        dataIndex: 'patientname',\r\n        key: 'patientname',\r\n      },\r\n      {\r\n        title: '患者手机号 ',\r\n        width: 120,\r\n        dataIndex: 'patientphone',\r\n        key: 'patientphone',\r\n      },\r\n      {\r\n        title: '患者证件号 ',\r\n        width: 120,\r\n        dataIndex: 'patientid',\r\n        key: 'patientid',\r\n      },\r\n      {\r\n        title: '预约科室 ',\r\n        width: 120,\r\n        dataIndex: 'depname',\r\n        key: 'depname',\r\n      },\r\n      {\r\n        title: '预约项目 ',\r\n        width: 120,\r\n        dataIndex: 'projectname',\r\n        key: 'projectname',\r\n      },\r\n      {\r\n        title: '预约医生 ',\r\n        width: 120,\r\n        dataIndex: 'doctorname',\r\n        key: 'doctorname',\r\n      },\r\n      {\r\n        title: '预约日期 ',\r\n        width: 120,\r\n        dataIndex: 'registerdate',\r\n        key: 'registerdate',\r\n      },\r\n      {\r\n        title: '预约状态 ',\r\n        width: 120,\r\n        dataIndex: 'registerstatus',\r\n        key: 'registerstatus',\r\n      },\r\n      {\r\n        title: '操作',\r\n        fixed:'right',\r\n        width: 60,\r\n        dataIndex: 'editdep',\r\n        key: 'editdep',\r\n        render: (text, record) => {\r\n          return (\r\n            <a onClick={() => this.editFunc(record)}>编辑</a>\r\n          );\r\n        }\r\n      }\r\n    ]\r\n    return (\r\n      <Fragment>\r\n        <Row>\r\n            <Col span={8}>\r\n                <Col span={10} className='info_label'>患者姓名：</Col>\r\n                <Col span={14} className='info_input'>\r\n                    <Input onChange={(e) => this.changeInputname(e)} value={this.state.patientname} />\r\n                </Col>\r\n            </Col>\r\n              <Col span={8}>\r\n              <Col span={10} className='info_label'>患者证件号：</Col>\r\n                <Col span={14} className='info_input'>\r\n                    <Input onChange={(e) => this.changeInputid(e)}  value={this.state.patientid} />\r\n                </Col>\r\n              </Col>\r\n              <Col span={8}>\r\n              <Col span={10} className='info_label'>预约日期：</Col>\r\n                <Col span={14} className='info_input'>\r\n                    <DatePicker onChange={(date, dateString) =>\r\n                      this.onChange(date, dateString)} \r\n                      value={this.state.registerdate}\r\n                      allowClear={false}/>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n            <Button\r\n              className=\"button_search\"\r\n              type=\"primary\"\r\n              onClick={this.registerlistSearch}\r\n            >\r\n              查询\r\n            </Button>\r\n         <Table\r\n          columns={columns}\r\n          dataSource={this.state.list}\r\n          scroll={\r\n            {\r\n              x: 'max-content',\r\n              y:'max-content'\r\n            }\r\n          }\r\n          />\r\n          {this.state.editvisible && <RegisterInformationEdit \r\n          editvisible={this.state.editvisible}\r\n          patientname={this.state.patientname}\r\n          patientphone={this.state.patientphone}\r\n          patientid={this.state.patientid}\r\n          depname={this.state.depname}\r\n          projectname={this.state.projectname}\r\n          doctorname={this.state.doctorname}\r\n          registerdate={this.state.registerdate}\r\n          registerstatus={this.state.registerstatus}\r\n          registersqlid={this.state.registersqlid}/>}  \r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default RegisterList;\r\n","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\depart\\adddepart.js",["269","270"],"import React,{Fragment}  from 'react';\r\nimport { Button,Modal,Row,Col, Input,Select, message} from 'antd';\r\nimport {Savedepartlist} from '../../service/account'//导入接口\r\nclass DepartAdd extends React.Component{\r\n  constructor(props){\r\n    super(props);    \r\n    this.state={\r\n        addvisible:this.props.addvisible,\r\n        depart:\"\",\r\n        departid:\"\"\r\n    }\r\n  }\r\n  handleCancel = () => {\r\n    this.setState({  \r\n        addvisible:!this.state.addvisible\r\n    })\r\n  };\r\n  formSubmitEvent = () =>{\r\n    if(!/^\\d{7}$/g.test(this.state.departid)){\r\n      return message.warning(\"请输入7位数字的科室编号！！\")\r\n    }\r\n    if(!/^[\\u4e00-\\u9fa5]{0,}$/g.test(this.state.depart)){\r\n      return message.warning(\"请输入正确的科室名称！！\")\r\n    }\r\n    const payload={\r\n        depart:this.state.depart,\r\n        departid:this.state.departid\r\n    }\r\n    this.setState({\r\n      addvisible:!this.state.addvisible\r\n    })\r\n    //添加科室后，调用后端接口，把数据传给后端\r\n    const requestData=payload;\r\n    Savedepartlist(requestData).then(response=>{\r\n      if(response.data.rescode == 1){\r\n        message.success(response.data.message)\r\n      }else{\r\n        message.warning(response.data.message)\r\n      }\r\n      \r\n      console.log(response.data.data);\r\n    //   this.setState({\r\n    //     list:response.data.data\r\n    //   })\r\n    }).catch(error=>{\r\n        console.log(error)\r\n    })\r\n    console.log(payload);\r\n  }\r\n\r\n  closeModalEvent = () =>{\r\n    this.setState({\r\n      addvisible:false\r\n  })\r\n  }\r\n  inputChangeid=(e)=>{\r\n      this.setState({\r\n          departid:e.target.value\r\n      })\r\n  }\r\n  inputChange=(e)=>{\r\n    this.setState({\r\n        depart:e.target.value\r\n    })\r\n  }\r\n  render(){\r\n    return (\r\n        <Fragment>\r\n          <Modal title=\"添加科室\" visible={this.state.addvisible} onCancel={this.handleCancel} footer={null}>\r\n            <div>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            科室编号：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input\r\n                       onChange={(e) => this.inputChangeid(e)} value={this.state.departid}\r\n                       placeholder=\"请输入科室编号\"\r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            科室名称：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input\r\n                       onChange={(e) => this.inputChange(e)} value={this.state.depart}\r\n                       placeholder=\"请输入科室名称\"\r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n\r\n                <div className=\"buttonmain\">\r\n                  <Button\r\n                    className=\"buttonsave_content\"\r\n                    type=\"primary\"\r\n                    onClick={this.formSubmitEvent}\r\n                  >\r\n                    <span style={{ letterSpacing: '2px' }}>保存</span>\r\n                  </Button>\r\n                  <Button\r\n                    className=\"buttoncancel_content\"\r\n                    onClick={this.closeModalEvent}\r\n                  >\r\n                    <span style={{ letterSpacing: '2px' }}>\r\n                      取消\r\n                    </span>\r\n                  </Button>\r\n                </div>\r\n            </div>\r\n          </Modal>\r\n        </Fragment>\r\n      );\r\n    };\r\n  }\r\nexport default DepartAdd;","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\depart\\editdepart.js",["271","272"],"import React,{Fragment}  from 'react';\r\nimport { Button,Modal,Row,Col, Input,Select, message} from 'antd';\r\nimport {Updatedepartlist} from '../../service/account'//导入接口\r\nclass DepartEdit extends React.Component{\r\n  constructor(props){\r\n    super(props);    \r\n    this.state={\r\n        editvisible:this.props.editvisible,\r\n        depart:this.props.depart,\r\n        departid:this.props.departid,\r\n        departsqlid:this.props.departsqlid\r\n    }\r\n  }\r\n  handleCancel = () => {\r\n    this.setState({  \r\n        editvisible:!this.state.editvisible\r\n    })\r\n  };\r\n  formSubmitEvent = () =>{\r\n    const payload={\r\n        depart:this.state.depart,\r\n        departid:this.state.departid,\r\n        departsqlid:this.state.departsqlid\r\n    }\r\n    this.setState({\r\n      editvisible:!this.state.editvisible\r\n    })\r\n    //添加科室后，调用后端接口，把数据传给后端\r\n    const requestData=payload;\r\n    Updatedepartlist(requestData).then(response=>{\r\n      if(response.data.rescode == 1){\r\n        message.success(response.data.message)\r\n      }else{\r\n        message.warning(response.data.message)\r\n      }\r\n    //   this.setState({\r\n    //     list:response.data.data\r\n    //   })\r\n    }).catch(error=>{\r\n        console.log(error)\r\n    })\r\n    console.log(payload);\r\n  }\r\n\r\n  closeModalEvent = () =>{\r\n    this.setState({\r\n      editvisible:false\r\n  })\r\n  }\r\n  inputChangeid=(e)=>{\r\n      this.setState({\r\n          departid:e.target.value\r\n      })\r\n  }\r\n  inputChange=(e)=>{\r\n    this.setState({\r\n        depart:e.target.value\r\n    })\r\n  }\r\n  render(){\r\n    return (\r\n        <Fragment>\r\n          <Modal title=\"编辑科室\" visible={this.state.editvisible} onCancel={this.handleCancel} footer={null}>\r\n            <div>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            科室编号：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input\r\n                       onChange={(e) => this.inputChangeid(e)} value={this.state.departid}\r\n                       placeholder=\"请输入科室编号\"\r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            科室名称：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input\r\n                       onChange={(e) => this.inputChange(e)} value={this.state.depart}\r\n                       placeholder=\"请输入科室名称\"\r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n\r\n                <div className=\"buttonmain\">\r\n                  <Button\r\n                    className=\"buttonsave_content\"\r\n                    type=\"primary\"\r\n                    onClick={this.formSubmitEvent}\r\n                  >\r\n                    <span style={{ letterSpacing: '2px' }}>保存</span>\r\n                  </Button>\r\n                  <Button\r\n                    className=\"buttoncancel_content\"\r\n                    onClick={this.closeModalEvent}\r\n                  >\r\n                    <span style={{ letterSpacing: '2px' }}>\r\n                      取消\r\n                    </span>\r\n                  </Button>\r\n                </div>\r\n            </div>\r\n          </Modal>\r\n        </Fragment>\r\n      );\r\n    };\r\n  }\r\nexport default DepartEdit;","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\depart\\deletedepart.js",[],"C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\project\\addproject.js",["273"],"import React,{Fragment}  from 'react';\r\nimport { Button,Modal,Row,Col, Input,Select, message} from 'antd';\r\nimport {Saveprojectlist,GetdepartList} from '../../service/account'//导入接口\r\nclass ProjectAdd extends React.Component{\r\n  constructor(props){\r\n    super(props);    \r\n    this.state={\r\n        addvisible:this.props.addvisible,\r\n        projectid:\"\",\r\n        projectname:\"\",\r\n        projectdep:\"\",\r\n        departlist:[]\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    GetdepartList().then(response=>{\r\n      console.log(response.data.data,'1');\r\n      const data=response.data.data;\r\n      if(data){\r\n        var departlist=[];\r\n        for(var i=0,len=data.length;i<len;i++){\r\n          var departdata=data[i];\r\n          departlist.push(departdata.depart)\r\n        }\r\n      }\r\n      this.setState({\r\n        departlist:departlist\r\n      })\r\n      console.log('11111',this.state.departlist);\r\n    }).catch(error=>{\r\n      console.log(error);\r\n      }) \r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({  \r\n        addvisible:!this.state.addvisible\r\n    })\r\n  };\r\n  formSubmitEvent = () =>{\r\n    if(!this.state.projectid){\r\n      return message.warning(\"请输入项目编号！！\")\r\n    }\r\n    if(!/^\\d{9}$/g.test(this.state.projectid)){\r\n      return message.warning(\"请输入9位数字的项目编号！！\")\r\n    }\r\n    if(!this.state.projectname){\r\n      return message.warning(\"请输入项目名称！！\")\r\n    }\r\n    if(!/^[\\u4e00-\\u9fa5]{0,}$/g.test(this.state.projectname)){\r\n      return message.warning(\"请输入正确的项目名称！！\")\r\n    }\r\n    if(!this.state.projectdep){\r\n      return message.warning(\"请选择项目所属科室！！\")\r\n    }\r\n    const payload={\r\n      projectid:this.state.projectid,\r\n      projectname:this.state.projectname,\r\n      projectdep:this.state.projectdep\r\n    }\r\n    this.setState({\r\n      addvisible:!this.state.addvisible\r\n    })\r\n    //添加科室后，调用后端接口，把数据传给后端\r\n    const requestData=payload;\r\n    console.log('Saveprojectlist',requestData);\r\n    Saveprojectlist(requestData).then(response=>{\r\n      if(response.data.rescode == 1){\r\n        message.success(response.data.message)\r\n      }else{\r\n        message.warning(response.data.message)\r\n      }\r\n      \r\n     \r\n    //   this.setState({\r\n    //     list:response.data.data\r\n    //   })\r\n    }).catch(error=>{\r\n        console.log(error)\r\n    })\r\n  }\r\n\r\n  closeModalEvent = () =>{\r\n    this.setState({\r\n      addvisible:false\r\n  })\r\n  }\r\n  inputChangeid=(e)=>{\r\n      this.setState({\r\n          projectid:e.target.value\r\n      })\r\n  }\r\n  inputChange=(e)=>{\r\n    this.setState({\r\n          projectname:e.target.value\r\n    })\r\n  }\r\n  selectChangedep=(e)=>{\r\n    this.setState({\r\n      projectdep:e\r\n    })\r\n  }\r\n  render(){\r\n    const {Option} = Select;\r\n    return (\r\n        <Fragment>\r\n          <Modal title=\"添加项目\" visible={this.state.addvisible} onCancel={this.handleCancel} footer={null}>\r\n            <div>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            项目编号：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input\r\n                       onChange={(e) => this.inputChangeid(e)} value={this.state.projectid}\r\n                       placeholder=\"请输入项目编号\"\r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            项目名称：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input\r\n                       onChange={(e) => this.inputChange(e)} value={this.state.projectname}\r\n                       placeholder=\"请输入项目名称\"\r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={6} className='form_title'>所属科室：</Col>\r\n                    <Col span={18}>\r\n                    <Select defaultValue=\"\" style={{ width: 355 }} \r\n                    onChange={(e) => this.selectChangedep(e)} \r\n                    //  options={this.state.departlist.toString()}\r\n                    value={this.state.projectdep}>\r\n                      {this.state.departlist.map((value,  label) => (\r\n                        <Option key={value} value={value}>\r\n                          {value}\r\n                        </Option>\r\n                        ))}                  \r\n                    </Select>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <div className=\"buttonmain\">\r\n                  <Button\r\n                    className=\"buttonsave_content\"\r\n                    type=\"primary\"\r\n                    onClick={this.formSubmitEvent}\r\n                  >\r\n                    <span style={{ letterSpacing: '2px' }}>保存</span>\r\n                  </Button>\r\n                  <Button\r\n                    className=\"buttoncancel_content\"\r\n                    onClick={this.closeModalEvent}\r\n                  >\r\n                    <span style={{ letterSpacing: '2px' }}>\r\n                      取消\r\n                    </span>\r\n                  </Button>\r\n                </div>\r\n            </div>\r\n          </Modal>\r\n        </Fragment>\r\n      );\r\n    };\r\n  }\r\nexport default ProjectAdd;","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\project\\editproject.js",["274"],"import React,{Fragment}  from 'react';\r\nimport { Button,Modal,Row,Col, Input,Select, message} from 'antd';\r\nimport {Updateprojectlist,GetdepartList} from '../../service/account'//导入接口\r\nclass ProjectEdit extends React.Component{\r\n  constructor(props){\r\n    super(props);    \r\n    this.state={\r\n        editvisible:this.props.editvisible,\r\n        projectid:this.props.projectid,\r\n        projectname:this.props.projectname,\r\n        projectdep:this.props.projectdep,\r\n        projectsqlid:this.props.projectsqlid,\r\n        departlist:[]\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    GetdepartList().then(response=>{\r\n      console.log(response.data.data,'1');\r\n      const data=response.data.data;\r\n      if(data){\r\n        var departlist=[];\r\n        for(var i=0,len=data.length;i<len;i++){\r\n          var departdata=data[i];\r\n          departlist.push(departdata.depart)\r\n        }\r\n      }\r\n      this.setState({\r\n        departlist:departlist\r\n      })\r\n      console.log('11111',this.state.departlist);\r\n    }).catch(error=>{\r\n      console.log(error);\r\n      }) \r\n  }\r\n  handleCancel = () => {\r\n    this.setState({  \r\n      editvisible:!this.state.editvisible\r\n    })\r\n  };\r\n  formSubmitEvent = () =>{\r\n    if(!this.state.projectid){\r\n      return message.warning(\"请输入项目编号！！\")\r\n    }\r\n    if(!/^\\d{9}$/g.test(this.state.projectid)){\r\n      return message.warning(\"请输入9位数字的项目编号！！\")\r\n    }\r\n    if(!this.state.projectname){\r\n      return message.warning(\"请输入项目名称！！\")\r\n    }\r\n    if(!/^[\\u4e00-\\u9fa5]{0,}$/g.test(this.state.projectname)){\r\n      return message.warning(\"请输入正确的项目名称！！\")\r\n    }\r\n    if(!this.state.projectdep){\r\n      return message.warning(\"请选择项目所属科室！！\")\r\n    }\r\n    const payload={\r\n      projectid:this.state.projectid,\r\n      projectname:this.state.projectname,\r\n      projectdep:this.state.projectdep,\r\n      projectsqlid:this.state.projectsqlid\r\n    }\r\n    this.setState({\r\n      editvisible:!this.state.editvisible\r\n    })\r\n    //添加科室后，调用后端接口，把数据传给后端\r\n    const requestData=payload;\r\n    console.log('Saveprojectlist',requestData);\r\n    Updateprojectlist(requestData).then(response=>{\r\n      if(response.data.rescode == 1){\r\n        message.success(response.data.message)\r\n      }else{\r\n        message.warning(response.data.message)\r\n      }\r\n    //   this.setState({\r\n    //     list:response.data.data\r\n    //   })\r\n    }).catch(error=>{\r\n        console.log(error)\r\n    })\r\n  }\r\n\r\n  closeModalEvent = () =>{\r\n    this.setState({\r\n      editvisible:false\r\n  })\r\n  }\r\n  inputChangeid=(e)=>{\r\n      this.setState({\r\n          projectid:e.target.value\r\n      })\r\n  }\r\n  inputChange=(e)=>{\r\n    this.setState({\r\n          projectname:e.target.value\r\n    })\r\n  }\r\n  selectChangedep=(e)=>{\r\n    this.setState({\r\n      projectdep:e\r\n    })\r\n  }\r\n  render(){\r\n    const {Option} = Select;\r\n    return (\r\n        <Fragment>\r\n          <Modal title=\"添加项目\" visible={this.state.editvisible} onCancel={this.handleCancel} footer={null}>\r\n            <div>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            项目编号：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input\r\n                       onChange={(e) => this.inputChangeid(e)} value={this.state.projectid}\r\n                       placeholder=\"请输入项目编号\"\r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            项目名称：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input\r\n                       onChange={(e) => this.inputChange(e)} value={this.state.projectname}\r\n                       placeholder=\"请输入项目名称\"\r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={6} className='form_title'>所属科室：</Col>\r\n                    <Col span={18}>\r\n                    <Select defaultValue=\"\" style={{ width: 355 }} \r\n                    onChange={(e) => this.selectChangedep(e)} \r\n                    //  options={this.state.departlist.toString()}\r\n                    value={this.state.projectdep}>\r\n                      {this.state.departlist.map((value,  label) => (\r\n                        <Option key={value} value={value}>\r\n                          {value}\r\n                        </Option>\r\n                        ))}                  \r\n                    </Select>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <div className=\"buttonmain\">\r\n                  <Button\r\n                    className=\"buttonsave_content\"\r\n                    type=\"primary\"\r\n                    onClick={this.formSubmitEvent}\r\n                  >\r\n                    <span style={{ letterSpacing: '2px' }}>保存</span>\r\n                  </Button>\r\n                  <Button\r\n                    className=\"buttoncancel_content\"\r\n                    onClick={this.closeModalEvent}\r\n                  >\r\n                    <span style={{ letterSpacing: '2px' }}>\r\n                      取消\r\n                    </span>\r\n                  </Button>\r\n                </div>\r\n            </div>\r\n          </Modal>\r\n        </Fragment>\r\n      );\r\n    };\r\n  }\r\nexport default ProjectEdit;","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\project\\deleteproject.js",[],"C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\registerinformation\\editregisterinformation.js",["275"],"import React,{Fragment}  from 'react';\r\nimport { Button,Modal,Row,Col, Input,Select, message} from 'antd';\r\nimport moment from 'moment';\r\nimport {Updateregisterinformation} from '../../service/account'//导入接口\r\nclass RegisterInformationEdit extends React.Component{\r\n  constructor(props){\r\n    super(props);  \r\n    const dateFormat = 'YYYY-MM-DD'; \r\n    const registerdate=this.props.registerdate;\r\n    const registerdates=moment(registerdate).format(dateFormat);\r\n    this.state={\r\n        editvisible:this.props.editvisible,\r\n        patientname:this.props.patientname,\r\n        patientphone:this.props.patientphone,\r\n        patientid:this.props.patientid,\r\n        depname:this.props.depname,\r\n        projectname:this.props.projectname,\r\n        doctorname:this.props.doctorname,\r\n        registerdate:registerdates,\r\n        registerstatus:this.props.registerstatus,\r\n        registersqlid:this.props.registersqlid\r\n    }\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({  \r\n      // patientname:\"\",\r\n      // patientid:\"\",\r\n      // registerdate:\"\",\r\n      editvisible:!this.state.editvisible\r\n    })\r\n  };\r\n  formSubmitEvent = () =>{\r\n    console.log('thisthis',this.state);\r\n    const payload=this.state;\r\n    this.setState({\r\n      editvisible:!this.state.editvisible\r\n    })\r\n    //进行编辑保存后，将信息进行保存更改\r\n    const requestData=payload;\r\n    console.log('Saveprojectlist',requestData);\r\n    Updateregisterinformation(requestData).then(response=>{\r\n      message.success(response.data.message)\r\n      console.log(response.data.data);\r\n    //   this.setState({\r\n    //     list:response.data.data\r\n    //   })\r\n    }).catch(error=>{\r\n        console.log(error)\r\n    })\r\n  }\r\n\r\n  closeModalEvent = () =>{\r\n    this.setState({\r\n      editvisible:false\r\n  })\r\n  }\r\n  inputChangeid=(e)=>{\r\n      this.setState({\r\n          projectid:e.target.value\r\n      })\r\n  }\r\n  inputChange=(e)=>{\r\n    this.setState({\r\n          registerstatus:e\r\n    })\r\n  }\r\n  selectChangedep=(e)=>{\r\n    this.setState({\r\n      projectdep:e\r\n    })\r\n  }\r\n  render(){\r\n    const {Option} = Select;\r\n    return (\r\n        <Fragment>\r\n          <Modal title=\"编辑\" visible={this.state.editvisible} onCancel={this.handleCancel} footer={null}>\r\n            <div>\r\n            <Row className=\"form_padding\">\r\n                <Col span={6}>\r\n                    <span className=\"form_title\">\r\n                        患者姓名：\r\n                    </span>\r\n                </Col>\r\n                <Col span={18}>\r\n                    {/* <Input\r\n                    onChange={(e) => this.inputChangeid(e)} value={this.state.patientname}\r\n                    // placeholder=\"请输入\"\r\n                    />  */}\r\n                    <span style={{lineHeight:\"30px\"}}>{this.state.patientname}</span>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"form_padding\">\r\n                <Col span={6}>\r\n                    <span className=\"form_title\">\r\n                        患者手机号：\r\n                    </span>\r\n                </Col>\r\n                <Col span={18}>\r\n                <span style={{lineHeight:\"30px\"}}>{this.state.patientphone}</span>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"form_padding\">\r\n                <Col span={6} className='form_title'>患者证件号：</Col>\r\n                <Col span={18}>\r\n                <span style={{lineHeight:\"30px\"}}>{this.state.patientid}</span>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"form_padding\">\r\n                <Col span={6} className='form_title'>预约科室：</Col>\r\n                <Col span={18}>\r\n                <span style={{lineHeight:\"30px\"}}>{this.state.depname}</span> \r\n                </Col>\r\n            </Row>\r\n            <Row className=\"form_padding\">\r\n                <Col span={6} className='form_title'>预约项目：</Col>\r\n                <Col span={18}>\r\n                <span style={{lineHeight:\"30px\"}}>{this.state.projectname}</span>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"form_padding\">\r\n                <Col span={6} className='form_title'>预约医生：</Col>\r\n                <Col span={18}>\r\n                <span style={{lineHeight:\"30px\"}}>{this.state.doctorname}</span>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"form_padding\">\r\n                <Col span={6} className='form_title'>预约日期：</Col>\r\n                <Col span={18}>\r\n                <span style={{lineHeight:\"30px\"}}>{this.state.registerdate}</span>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"form_padding\">\r\n                <Col span={6} className='form_title'>预约状态：</Col>\r\n                <Col span={18}>\r\n                    <Select\r\n                    onChange={(e) => this.inputChange(e)} value={this.state.registerstatus}\r\n                    // placeholder=\"请输入项目名称\"\r\n                    \r\n                    >\r\n                    <Option value=\"预约成功\">预约成功</Option>\r\n                    <Option value=\"已就诊\">已就诊</Option>\r\n                    <Option value=\"已失效\">已失效</Option>\r\n                    </Select>\r\n                </Col>\r\n            </Row>\r\n\r\n            <div className=\"buttonmain\">\r\n              <Button\r\n                className=\"buttonsave_content\"\r\n                type=\"primary\"\r\n                onClick={this.formSubmitEvent}\r\n              >\r\n                <span style={{ letterSpacing: '2px' }}>保存</span>\r\n              </Button>\r\n              <Button\r\n                className=\"buttoncancel_content\"\r\n                onClick={this.handleCancel}\r\n              >\r\n                <span style={{ letterSpacing: '2px' }}>\r\n                  取消\r\n                </span>\r\n              </Button>\r\n            </div>\r\n            </div>\r\n           </Modal>\r\n        </Fragment>\r\n      );\r\n    };\r\n  }\r\nexport default RegisterInformationEdit;","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\patient\\index.js",["276","277"],"import React, { Fragment } from 'react';\r\nimport PatientEdit from \"./editpatient\";\r\nimport PatientAdd from \"./addpatient\";\r\nimport PatientChat from \"./chatpatient\";\r\nimport {PlusOutlined } from \"@ant-design/icons\";\r\nimport { Table,Button,Row,Col,Input, message } from 'antd';\r\nimport {Getpatientlist} from '../../service/account'//导入接口\r\nclass PatientList extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      list:[],\r\n      editvisible:false,\r\n      addvisible:false,\r\n      chatvisible:false,\r\n      patientsqlid:\"\",\r\n      patientname:\"\",\r\n      patientsex:\"\",\r\n      patientid:\"\",\r\n      patientage:\"\",\r\n      patientphone:\"\",\r\n      diseasename:\"\",  \r\n      diseasedetail:\"\",\r\n      clinicdate:\"\"\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    Getpatientlist().then(response=>{\r\n      const list=response.data.data;\r\n      this.setState({\r\n        list\r\n      })\r\n    }).catch(error=>{\r\n    })\r\n  }\r\n  editFunc=(record)=>{\r\n    console.log('record',record);\r\n    const patientsqlid=record._id;\r\n    const {\r\n      patientname,\r\n      patientsex,\r\n      patientid,\r\n      patientage,\r\n      patientphone,\r\n      diseasename,  \r\n      diseasedetail,\r\n      clinicdate} = record;\r\n      this.setState({\r\n        patientsqlid,\r\n        patientname,\r\n        patientsex,\r\n        patientid,\r\n        patientage,\r\n        patientphone,\r\n        diseasename,  \r\n        diseasedetail,\r\n        clinicdate,\r\n        editvisible:!this.state.editvisible\r\n      })\r\n  }\r\n\r\n  chatFunc=(record)=>{\r\n    const {\r\n      patientname,\r\n      patientsex,\r\n      patientid,\r\n      patientage,\r\n      patientphone,\r\n      diseasename,  \r\n      diseasedetail,\r\n      clinicdate} = record;\r\n      this.setState({\r\n        patientname,\r\n        patientsex,\r\n        patientid,\r\n        patientage,\r\n        patientphone,\r\n        diseasename,  \r\n        diseasedetail,\r\n        clinicdate,\r\n        chatvisible:!this.state.chatvisible\r\n      })\r\n  }\r\n\r\n  changeInputname=(e)=>{\r\n    this.setState({\r\n      patientname:e.target.value\r\n    })\r\n  }\r\n  changeInputid=(e)=>{\r\n    this.setState({\r\n      patientid:e.target.value\r\n    })\r\n  }\r\n  patientlistSearch=()=>{\r\n    if(!this.state.patientname){\r\n      return message.warning(\"患者姓名不可为空\");\r\n    }\r\n    if(!this.state.patientid){\r\n      return message.warning(\"患者证件号不可为空\");\r\n    }\r\n    console.log(this.state);\r\n    const requestData = {\r\n      action:\"query\",\r\n      patientname:this.state.patientname,\r\n      patientid:this.state.patientid,\r\n    }\r\n    console.log('requestData',requestData);\r\n    Getpatientlist(requestData).then(response=>{\r\n      const list=response.data.data;\r\n      this.setState({\r\n        list\r\n      })\r\n    }).catch(error=>{\r\n    })\r\n  }\r\n  addFunc=()=>{\r\n    this.setState({\r\n      addvisible:!this.state.addvisible\r\n    })\r\n  }\r\n  render(){\r\n    const columns=[\r\n      {\r\n        title: '患者姓名 ',\r\n        width: 120,\r\n        dataIndex: 'patientname',\r\n        key: 'patientname',\r\n      },\r\n      {\r\n        title: '患者性别 ',\r\n        width: 120,\r\n        dataIndex: 'patientsex',\r\n        key: 'patientsex',\r\n      },\r\n      {\r\n        title: '患者证件号 ',\r\n        width: 240,\r\n        dataIndex: 'patientid',\r\n        key: 'patientid',\r\n      },\r\n      {\r\n        title: '患者年龄 ',\r\n        width: 120,\r\n        dataIndex: 'patientage',\r\n        key: 'patientage',\r\n      },\r\n      {\r\n        title: '患者电话 ',\r\n        width: 120,\r\n        dataIndex: 'patientphone',\r\n        key: 'patientphone',\r\n      },\r\n      {\r\n        title: '疾病名称 ',\r\n        width: 120,\r\n        dataIndex: 'diseasename',\r\n        key: 'diseasename',\r\n      },\r\n      {\r\n        title: '诊断详情 ',\r\n        width: 240,\r\n        dataIndex: 'diseasedetail',\r\n        key: 'diseasedetail',\r\n      },\r\n      {\r\n        title: '就诊日期 ',\r\n        width: 120,\r\n        dataIndex: 'clinicdate',\r\n        key: 'clinicdate',\r\n      },\r\n      {\r\n        title: '操作',\r\n        fixed:'right',\r\n        width: 60,\r\n        dataIndex: 'edit',\r\n        key: 'edit',\r\n        render: (text, record) => {\r\n          return (\r\n            <a onClick={() => this.editFunc(record)}>编辑</a>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        title: '操作',\r\n        fixed:'right',\r\n        width: 120,\r\n        dataIndex: 'chat',\r\n        key: 'chat',\r\n        render: (text, record) => {\r\n          return (\r\n            <a onClick={() => this.chatFunc(record)}>在线沟通</a>\r\n          );\r\n        }\r\n      }\r\n      \r\n      \r\n    ]\r\n    return (    \r\n      <Fragment>\r\n\r\n        <Row>\r\n            <Col span={8}>\r\n                <Col span={10} className='info_label'>患者姓名：</Col>\r\n                <Col span={14} className='info_input'>\r\n                    <Input onChange={(e) => this.changeInputname(e)} value={this.state.patientname} />\r\n                </Col>\r\n            </Col>\r\n              <Col span={8}>\r\n              <Col span={10} className='info_label'>患者证件号：</Col>\r\n                <Col span={14} className='info_input'>\r\n                    <Input onChange={(e) => this.changeInputid(e)}  value={this.state.patientid} />\r\n                </Col>\r\n              </Col>\r\n        </Row>\r\n        <Button\r\n          className=\"button_search\"\r\n          type=\"primary\"\r\n          onClick={this.patientlistSearch}\r\n        >\r\n          查询\r\n        </Button>\r\n        <Button style={{ display: 'block',marginBottom:'10px'}} \r\n            type='primary' onClick={() => this.addFunc()}><span\r\n              style={{ letterSpacing: '2px' }}><PlusOutlined />添加</span>\r\n        </Button>  \r\n        <div>    \r\n        <Table\r\n          columns={columns}\r\n          dataSource={this.state.list}\r\n          scroll={\r\n            {\r\n              x: 'max-content',\r\n              y:'max-content'\r\n            }\r\n          }\r\n          /></div>  \r\n          {this.state.editvisible && <PatientEdit \r\n          patientsqlid={this.state.patientsqlid}\r\n          patientname={this.state.patientname}\r\n          patientsex={this.state.patientsex}\r\n          patientid={this.state.patientid}\r\n          patientage={this.state.patientage}\r\n          patientphone={this.state.patientphone}\r\n          diseasename={this.state.diseasename} \r\n          diseasedetail={this.state.diseasedetail}\r\n          clinicdate={this.state.clinicdate}\r\n          editvisible={this.state.editvisible}/>}\r\n          {this.state.chatvisible && <PatientChat \r\n          patientname={this.state.patientname}\r\n          patientsex={this.state.patientsex}\r\n          patientid={this.state.patientid}\r\n          patientage={this.state.patientage}\r\n          patientphone={this.state.patientphone}\r\n          diseasename={this.state.diseasename} \r\n          diseasedetail={this.state.diseasedetail}\r\n          clinicdate={this.state.clinicdate}\r\n          chatvisible={this.state.chatvisible}/>}\r\n          {this.state.addvisible && <PatientAdd \r\n          addvisible={this.state.addvisible} \r\n          />}   \r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default PatientList;\r\n","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\patient\\editpatient.js",["278"],"import React,{Fragment}  from 'react';\r\nimport moment from 'moment';\r\nimport { Button,Modal,Row,Col, Input,Select, message,DatePicker} from 'antd';\r\nimport {Updatepatientlist} from '../../service/account'//导入接口\r\nclass PatientEdit extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    // this.state=store.getState();\r\n    const dateFormat = 'YYYY-MM-DD'; \r\n    const clinicdate=this.props.clinicdate;\r\n    const clinicdates=moment(clinicdate).format(dateFormat);\r\n    this.state={\r\n      patientsqlid:this.props.patientsqlid,\r\n      patientname:this.props.patientname,\r\n      patientsex:this.props.patientsex,\r\n      patientid:this.props.patientid,\r\n      patientage:this.props.patientage,\r\n      patientphone:this.props.patientphone,\r\n      diseasename:this.props.diseasename,\r\n      diseasedetail:this.props.diseasedetail,\r\n      clinicdate:clinicdates,\r\n      editvisible:this.props.editvisible\r\n    }\r\n  }\r\n \r\ninputChange = (prop,e)=>{\r\n    if(prop === 'patientname'){\r\n        this.setState({\r\n          patientname:e.target.value\r\n        })\r\n    }\r\n    if(prop === 'patientsex'){\r\n        this.setState({\r\n          patientsex:e.target.value\r\n        })\r\n    }\r\n    if(prop === 'patientid'){\r\n        this.setState({\r\n          patientid:e.target.value\r\n        })\r\n    }\r\n    if(prop === 'patientage'){\r\n        this.setState({\r\n          patientage:e.target.value\r\n        })\r\n    }\r\n    if(prop === 'patientphone'){\r\n        this.setState({\r\n          patientphone:e.target.value\r\n        })\r\n    }\r\n    if(prop === 'diseasename'){\r\n      this.setState({\r\n        diseasename:e.target.value\r\n      })\r\n    }\r\n    if(prop === 'diseasedetail'){\r\n      this.setState({\r\n        diseasedetail:e.target.value\r\n      })\r\n    } \r\n    if(prop === 'clinicdate'){\r\n      this.setState({\r\n        clinicdate:e.target.value\r\n      })\r\n    }   \r\n}\r\n  selectChange= (prop, e) =>{\r\n    if(prop === 'patientsex'){\r\n        this.setState({\r\n          patientsex:e\r\n        })\r\n    } \r\n  }\r\n  onChangedate=(date, dateString) => {\r\n    // const dateFormat = 'YYYY-MM-DD';\r\n    // const data=moment(dateString);\r\n    // this.setState({\r\n    //   clinicdate:data\r\n    // });\r\n    // this.setState({\r\n    //   registerdate:this.state.registerdate.format(dateFormat)\r\n    // })\r\n    console.log(1);\r\n  }\r\n  handleCancel = () => {\r\n    this.setState({   \r\n        editvisible:!this.state.editvisible\r\n    })\r\n  };\r\n  formSubmitEvent = () =>{\r\n    if(!this.state.patientname){\r\n      return message.warning(\"患者姓名不可为空！！！\");\r\n    }\r\n    if(!/^[\\u4e00-\\u9fa5]{0,}$/g.test(this.state.patientname)){\r\n      return message.warning(\"请输入正确的患者名称！！\")\r\n    }\r\n    if(!this.state.patientsex){\r\n      return message.warning(\"患者性别不可为空！！！\");\r\n    }\r\n    if(!this.state.patientid){\r\n      return message.warning(\"患者证件号不可为空！！！\");\r\n    }\r\n    if(!/(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/g.test(this.state.patientid)){\r\n      return message.warning(\"请输入正确的证件号\")\r\n    }\r\n    if(!this.state.patientage){\r\n      return message.warning(\"患者年龄不可为空！！！\");\r\n    }\r\n    if(!this.state.patientphone){\r\n      return message.warning(\"患者电话不可为空！！！\");\r\n    }\r\n    if(!/^[1][3,4,5,7,8][0-9]{9}$/g.test(this.state.patientphone)){\r\n      return message.warning(\"请输入正确的手机号\")\r\n    }\r\n    if(!this.state.diseasename){\r\n      return message.warning(\"疾病名称不可为空！！！\");\r\n    }\r\n    if(!this.state.diseasedetail){\r\n      return message.warning(\"疾病详情不可为空！！！\");\r\n    }\r\n    if(!this.state.clinicdate){\r\n      return message.warning(\"就诊日期不可为空！！！\");\r\n    }\r\n    const payload={\r\n      patientsqlid:this.state.patientsqlid,\r\n      patientname:this.state.patientname,\r\n      patientsex:this.state.patientsex,\r\n      patientid:this.state.patientid,\r\n      patientage:this.state.patientage,\r\n      patientphone:this.state.patientphone,\r\n      diseasename:this.state.diseasename,\r\n      diseasedetail:this.state.diseasedetail,\r\n      clinicdate:this.state.clinicdate,\r\n    }\r\n    this.setState({\r\n      editvisible:!this.state.editvisible\r\n    })\r\n    //编辑医生保存后，对患者信息进行更新\r\n    const requestData=payload;\r\n    Updatepatientlist(requestData).then(response=>{\r\n      message.success(response.data.message)\r\n      console.log(response.data.data);\r\n    }).catch(error=>{\r\n        console.log(error)\r\n    })\r\n\r\n  }\r\n  closeModalEvent = () =>{\r\n    this.setState({\r\n      editvisible:false\r\n  })\r\n  }\r\n  render(){\r\n    const { Option } = Select;\r\n    const { TextArea } = Input;\r\n    return (\r\n        <Fragment>\r\n          <Modal title=\"编辑病人\" visible={this.state.editvisible} onCancel={this.handleCancel} footer={null}>\r\n            <div>\r\n            <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            患者姓名：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input \r\n                       onChange={(e) => this.inputChange('patientname',e)} value={this.state.patientname}\r\n                       \r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            患者性别：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       {/* <Input\r\n                       onChange={(e) => this.inputChange('patientsex',e)} value={this.state.patientsex}\r\n                      \r\n                       />  */}\r\n                       <Select style={{ width: 355 }} onChange={(e) => this.selectChange('patientsex',e)}  value={this.state.patientsex}>\r\n                        <Option value=\"man\">男</Option>\r\n                        <Option value=\"woman\">女</Option>\r\n                      </Select>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            患者证件号：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input\r\n                       onChange={(e) => this.inputChange('patientid',e)} value={this.state.patientid}\r\n                      \r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            患者年龄：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input\r\n                       onChange={(e) => this.inputChange('patientage',e)} value={this.state.patientage}\r\n                       \r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            患者电话：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input\r\n                       onChange={(e) => this.inputChange('patientphone',e)} value={this.state.patientphone}\r\n                       \r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            疾病名称：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input\r\n                       onChange={(e) => this.inputChange('diseasename',e)} value={this.state.diseasename}\r\n                       \r\n                       /> \r\n                       \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            诊断详情：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       {/* <Input\r\n                       onChange={(e) => this.inputChange('diseasedetail',e)} value={this.state.diseasedetail}\r\n                       \r\n                       />  */}\r\n                       <TextArea rows={4}  \r\n                       onChange={(e) => this.inputChange('diseasedetail',e)} \r\n                       value={this.state.diseasedetail}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            就诊日期：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       {/* <Input\r\n                       onChange={(e) => this.inputChange('clinicdate',e)} value={this.state.clinicdate}\r\n                       \r\n                       />  */}\r\n                       \r\n                    {/* <DatePicker onChange={(date, dateString) =>\r\n                      this.onChangedate(date, dateString)}  */}\r\n                      {/* value={this.state.clinicdate} */}\r\n                      {/* allowClear={false}/> */}\r\n                      <span style={{lineHeight:\"35px\"}}>{this.state.clinicdate}</span>\r\n                </Col>\r\n                \r\n                </Row>\r\n                \r\n                <div className=\"buttonmain\">\r\n                  <Button\r\n                    className=\"buttonsave_content\"\r\n                    type=\"primary\"\r\n                    onClick={this.formSubmitEvent}\r\n                  >\r\n                    <span style={{ letterSpacing: '2px' }}>保存</span>\r\n                  </Button>\r\n                  <Button\r\n                    className=\"buttoncancel_content\"\r\n                    onClick={this.closeModalEvent}\r\n                  >\r\n                    <span style={{ letterSpacing: '2px' }}>\r\n                      取消\r\n                    </span>\r\n                  </Button>\r\n                </div>\r\n            </div>\r\n          </Modal>\r\n        </Fragment>\r\n      );\r\n    };\r\n  }\r\nexport default PatientEdit;","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\patient\\addpatient.js",["279","280","281"],"import React,{Fragment}  from 'react';\r\nimport moment from 'moment';\r\nimport { Button,Modal,Row,Col, Input,Select, message,DatePicker} from 'antd';\r\nimport {Savepatientlist,GetdepartList,GetprojectList} from '../../service/account'//导入接口\r\nclass PatientAdd extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    // this.state=store.getState();\r\n    // const dateFormat = 'YYYY-MM-DD'; \r\n    // const clinicdate=this.props.clinicdate;\r\n    // const clinicdates=moment(clinicdate).format(dateFormat);\r\n    this.state={\r\n      patientname:\"\",\r\n      patientsex:\"\",\r\n      patientid:\"\",\r\n      patientage:\"\",\r\n      patientphone:\"\",\r\n      diseasename:\"\",\r\n      diseasedetail:\"\",\r\n      clinicdate:\"\",\r\n      addvisible:this.props.addvisible\r\n    }\r\n    // this.state=store.getState();\r\n//     store.subscribe(()=>{\r\n//       this.setState(store.getState())\r\n//   })\r\n  }\r\n  // componentWillMount() {\r\n  //   GetdepartList().then(response=>{\r\n  //     console.log(response.data.data,'1');\r\n  //     const data=response.data.data;\r\n  //     if(data){\r\n  //       var departlist=[];\r\n  //       for(var i=0,len=data.length;i<len;i++){\r\n  //         var departdata=data[i];\r\n  //         departlist.push(departdata.depart)\r\n  //       }\r\n  //     }\r\n  //     this.setState({\r\n  //       departlist:departlist\r\n  //     })\r\n  //     console.log('11111',this.state.departlist);\r\n  //   }).catch(error=>{\r\n  //     console.log(error);\r\n  //     }) \r\n\r\n  //   GetprojectList().then(response=>{\r\n  //     const data=response.data.data;\r\n  //     if(data){\r\n  //       var projectlist=[];\r\n  //       for(var i=0,len=data.length;i<len;i++){\r\n  //         var projectdata=data[i];\r\n  //         projectlist.push(projectdata.projectname)\r\n  //       }\r\n  //     }\r\n  //     this.setState({\r\n  //       projectlist:projectlist\r\n  //     })\r\n  //     console.log('projectlist',this.state.projectlist);\r\n  //     console.log(response.data.data,'1');\r\n  //     // this.setState({\r\n  //     //   doctorproject:response.data.data\r\n  //     // })\r\n  //   }).catch(error=>{\r\n  //     console.log(error);\r\n  //     })  \r\n\r\n  // }\r\ninputChange = (prop,e)=>{\r\n    if(prop === 'patientname'){\r\n        this.setState({\r\n          patientname:e.target.value\r\n        })\r\n    }\r\n    if(prop === 'patientsex'){\r\n        this.setState({\r\n          patientsex:e.target.value\r\n        })\r\n    }\r\n    if(prop === 'patientid'){\r\n        this.setState({\r\n          patientid:e.target.value\r\n        })\r\n    }\r\n    if(prop === 'patientage'){\r\n        this.setState({\r\n          patientage:e.target.value\r\n        })\r\n    }\r\n    if(prop === 'patientphone'){\r\n        this.setState({\r\n          patientphone:e.target.value\r\n        })\r\n    }\r\n    if(prop === 'diseasename'){\r\n      this.setState({\r\n        diseasename:e.target.value\r\n      })\r\n    }\r\n    if(prop === 'diseasedetail'){\r\n      this.setState({\r\n        diseasedetail:e.target.value\r\n      })\r\n    } \r\n    if(prop === 'clinicdate'){\r\n      this.setState({\r\n        clinicdate:e.target.value\r\n      })\r\n    }   \r\n}\r\n  selectChange= (prop, e) =>{\r\n    if(prop === 'patientsex'){\r\n        this.setState({\r\n          patientsex:e\r\n        })\r\n    } \r\n  }\r\n  onChangedate=(date, dateString) => {\r\n    const dateFormat = 'YYYY-MM-DD';\r\n    const data=moment(dateString);\r\n    this.setState({\r\n      clinicdate:data\r\n    });\r\n    // this.setState({\r\n    //   registerdate:this.state.registerdate.format(dateFormat)\r\n    // })\r\n    console.log(1);\r\n  }\r\n  handleCancel = () => {\r\n    this.setState({   \r\n        addvisible:!this.state.addvisible\r\n    })\r\n  };\r\n  formSubmitEvent = () =>{\r\n    if(!this.state.patientname){\r\n      return message.warning(\"患者姓名不可为空！！！\");\r\n    }\r\n    if(!/^[\\u4e00-\\u9fa5]{0,}$/g.test(this.state.patientname)){\r\n      return message.warning(\"请输入正确的患者名称！！\")\r\n    }\r\n    // if((this.state.patientname).match(/^[u4e00-u9fa5]{0,}$/g)){\r\n    //   return message.warning(\"请输入正确的患者姓名！！！\");\r\n    // }\r\n    // if(!/^[/u4e00-/u9fa5]$/g.test(this.state.patientname)){\r\n    //   return message.warning(\"请输入正确的患者\");\r\n    // }\r\n    if(!this.state.patientsex){\r\n      return message.warning(\"患者性别不可为空！！！\");\r\n    }\r\n    if(!this.state.patientid){\r\n      return message.warning(\"患者证件号不可为空！！！\");\r\n    }\r\n    if(!/(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/g.test(this.state.patientid)){\r\n      return message.warning(\"请输入正确的证件号\")\r\n    }\r\n    if(!this.state.patientage){\r\n      return message.warning(\"患者年龄不可为空！！！\");\r\n    }\r\n    if(!this.state.patientphone){\r\n      return message.warning(\"患者电话不可为空！！！\");\r\n    }\r\n    if(!/^[1][3,4,5,7,8][0-9]{9}$/g.test(this.state.patientphone)){\r\n      return message.warning(\"请输入正确的手机号\")\r\n    }\r\n    if(!this.state.diseasename){\r\n      return message.warning(\"疾病名称不可为空！！！\");\r\n    }\r\n    if(!this.state.diseasedetail){\r\n      return message.warning(\"疾病详情不可为空！！！\");\r\n    }\r\n    if(!this.state.clinicdate){\r\n      return message.warning(\"就诊日期不可为空！！！\");\r\n    }\r\n    const dateFormat = 'YYYY-MM-DD';\r\n    const datefor=this.state.clinicdate;\r\n    const payload = {\r\n      patientname:this.state.patientname,\r\n      patientsex:this.state.patientsex,\r\n      patientid:this.state.patientid,\r\n      patientage:this.state.patientage,\r\n      patientphone:this.state.patientphone,\r\n      diseasename:this.state.diseasename,\r\n      diseasedetail:this.state.diseasedetail,\r\n      clinicdate:moment(datefor).format(dateFormat),\r\n    }\r\n    console.log('88',payload);\r\n    this.setState({\r\n      addvisible:!this.state.addvisible\r\n    })\r\n    //编辑医生保存后，调用后端接口，把数据传给后端\r\n    const requestData=payload;\r\n    Savepatientlist(requestData).then(response=>{\r\n      message.success(response.data.message)\r\n      console.log(response.data.data);\r\n    }).catch(error=>{\r\n        console.log(error)\r\n    })\r\n\r\n  }\r\n  closeModalEvent = () =>{\r\n    this.setState({\r\n      addvisible:false\r\n  })\r\n  }\r\n  render(){\r\n    const { Option } = Select;\r\n    const { TextArea } = Input;\r\n    return (\r\n        <Fragment>\r\n          <Modal title=\"添加病人\" visible={this.state.addvisible} onCancel={this.handleCancel} footer={null}>\r\n            <div>\r\n            <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            患者姓名：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input \r\n                       onChange={(e) => this.inputChange('patientname',e)} value={this.state.patientname}\r\n                       \r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            患者性别：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       {/* <Input\r\n                       onChange={(e) => this.inputChange('patientsex',e)} value={this.state.patientsex}\r\n                      \r\n                       />  */}\r\n                       <Select style={{ width: 355 }} onChange={(e) => this.selectChange('patientsex',e)}  value={this.state.patientsex}>\r\n                        <Option value=\"男\">男</Option>\r\n                        <Option value=\"女\">女</Option>\r\n                      </Select>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            患者证件号：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input\r\n                       onChange={(e) => this.inputChange('patientid',e)} value={this.state.patientid}\r\n                      \r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            患者年龄：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input\r\n                       onChange={(e) => this.inputChange('patientage',e)} value={this.state.patientage}\r\n                       \r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            患者电话：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input\r\n                       onChange={(e) => this.inputChange('patientphone',e)} value={this.state.patientphone}\r\n                       \r\n                       /> \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            疾病名称：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       <Input\r\n                       onChange={(e) => this.inputChange('diseasename',e)} value={this.state.diseasename}\r\n                       \r\n                       /> \r\n                       \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            诊断详情：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       {/* <Input\r\n                       onChange={(e) => this.inputChange('diseasedetail',e)} value={this.state.diseasedetail}\r\n                       \r\n                       />  */}\r\n                       <TextArea rows={4}  \r\n                       onChange={(e) => this.inputChange('diseasedetail',e)} \r\n                       value={this.state.diseasedetail}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            就诊日期：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       {/* <Input\r\n                       onChange={(e) => this.inputChange('clinicdate',e)} value={this.state.clinicdate}\r\n                       \r\n                       />  */}\r\n                       \r\n                    <DatePicker onChange={(date, dateString) =>\r\n                      this.onChangedate(date, dateString)} \r\n                      value={this.state.clinicdate} \r\n                      allowClear={false}/>\r\n                      {/* <span style={{lineHeight:\"35px\"}}>{this.state.clinicdate}</span> */}\r\n                    </Col>\r\n                \r\n                </Row>\r\n                \r\n                <div className=\"buttonmain\">\r\n                  <Button\r\n                    className=\"buttonsave_content\"\r\n                    type=\"primary\"\r\n                    onClick={this.formSubmitEvent}\r\n                  >\r\n                    <span style={{ letterSpacing: '2px' }}>保存</span>\r\n                  </Button>\r\n                  <Button\r\n                    className=\"buttoncancel_content\"\r\n                    onClick={this.closeModalEvent}\r\n                  >\r\n                    <span style={{ letterSpacing: '2px' }}>\r\n                      取消\r\n                    </span>\r\n                  </Button>\r\n                </div>\r\n            </div>\r\n          </Modal>\r\n        </Fragment>\r\n      );\r\n    };\r\n  }\r\nexport default PatientAdd;","C:\\Users\\LENOVO\\Desktop\\online\\src\\views\\patient\\chatpatient.js",["282","283","284"],"import React,{Fragment}  from 'react';\r\nimport moment from 'moment';\r\nimport \"./style.css\";\r\nimport {PictureTwoTone} from \"@ant-design/icons\";\r\nimport { Button,Modal,Row,Col, Input,Select, message,DatePicker} from 'antd';\r\nimport {Savepatientlist,GetdepartList,GetprojectList} from '../../service/account'//导入接口\r\nclass PatientChat extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    // this.state=store.getState();\r\n    const dateFormat = 'YYYY-MM-DD'; \r\n    const clinicdate=this.props.clinicdate;\r\n    const clinicdates=moment(clinicdate).format(dateFormat);\r\n    this.state={\r\n      patientname:this.props.patientname,\r\n      patientsex:this.props.patientsex,\r\n      patientid:this.props.patientid,\r\n      patientage:this.props.patientage,\r\n      patientphone:this.props.patientphone,\r\n      diseasename:this.props.diseasename,\r\n      diseasedetail:this.props.diseasedetail,\r\n      clinicdate:clinicdates,\r\n      chatvisible:this.props.chatvisible\r\n    }\r\n    // this.state=store.getState();\r\n//     store.subscribe(()=>{\r\n//       this.setState(store.getState())\r\n//   })\r\n  }\r\n  componentWillMount() {\r\n    GetdepartList().then(response=>{\r\n      console.log(response.data.data,'1');\r\n      const data=response.data.data;\r\n      if(data){\r\n        var departlist=[];\r\n        for(var i=0,len=data.length;i<len;i++){\r\n          var departdata=data[i];\r\n          departlist.push(departdata.depart)\r\n        }\r\n      }\r\n      this.setState({\r\n        departlist:departlist\r\n      })\r\n      console.log('11111',this.state.departlist);\r\n    }).catch(error=>{\r\n      console.log(error);\r\n      }) \r\n\r\n    GetprojectList().then(response=>{\r\n      const data=response.data.data;\r\n      if(data){\r\n        var projectlist=[];\r\n        for(var i=0,len=data.length;i<len;i++){\r\n          var projectdata=data[i];\r\n          projectlist.push(projectdata.projectname)\r\n        }\r\n      }\r\n      this.setState({\r\n        projectlist:projectlist\r\n      })\r\n      console.log('projectlist',this.state.projectlist);\r\n      console.log(response.data.data,'1');\r\n      // this.setState({\r\n      //   doctorproject:response.data.data\r\n      // })\r\n    }).catch(error=>{\r\n      console.log(error);\r\n      })  \r\n\r\n  }\r\ninputChange = (prop,e)=>{\r\n    if(prop === 'patientname'){\r\n        this.setState({\r\n          patientname:e.target.value\r\n        })\r\n    }\r\n    if(prop === 'patientsex'){\r\n        this.setState({\r\n          patientsex:e.target.value\r\n        })\r\n    }\r\n    if(prop === 'patientid'){\r\n        this.setState({\r\n          patientid:e.target.value\r\n        })\r\n    }\r\n    if(prop === 'patientage'){\r\n        this.setState({\r\n          patientage:e.target.value\r\n        })\r\n    }\r\n    if(prop === 'patientphone'){\r\n        this.setState({\r\n          patientphone:e.target.value\r\n        })\r\n    }\r\n    if(prop === 'diseasename'){\r\n      this.setState({\r\n        diseasename:e.target.value\r\n      })\r\n    }\r\n    if(prop === 'diseasedetail'){\r\n      this.setState({\r\n        diseasedetail:e.target.value\r\n      })\r\n    } \r\n    if(prop === 'clinicdate'){\r\n      this.setState({\r\n        clinicdate:e.target.value\r\n      })\r\n    }   \r\n}\r\n  selectChange= (prop, e) =>{\r\n    if(prop === 'patientsex'){\r\n        this.setState({\r\n          patientsex:e\r\n        })\r\n    } \r\n  }\r\n  onChangedate=(date, dateString) => {\r\n    // const dateFormat = 'YYYY-MM-DD';\r\n    // const data=moment(dateString);\r\n    // this.setState({\r\n    //   clinicdate:data\r\n    // });\r\n    // this.setState({\r\n    //   registerdate:this.state.registerdate.format(dateFormat)\r\n    // })\r\n    console.log(1);\r\n  }\r\n  handleCancel = () => {\r\n    this.setState({   \r\n        chatvisible:!this.state.chatvisible\r\n    })\r\n  };\r\n  formSubmitEvent = () =>{\r\n    // if(!this.state.doctorid){\r\n    //   return message.warning(\"医生编号不可为空！！！\");\r\n    // }\r\n    // if(!this.state.doctorname){\r\n    //   return message.warning(\"医生姓名不可为空！！！\");\r\n    // }\r\n    // if(!this.state.doctorsex){\r\n    //   return message.warning(\"医生性别不可为空！！！\");\r\n    // }\r\n    // if(!this.state.doctorage){\r\n    //   return message.warning(\"医生年龄不可为空！！！\");\r\n    // }\r\n    // if(this.state.doctorage>100||this.state.doctorage<18){\r\n    //   return message.warning(\"请输入正确的医生年龄！！！\");\r\n    // }\r\n    // if(!this.state.doctorphone){\r\n    //   return message.warning(\"医生电话不可为空！！！\");\r\n    // }\r\n    // if(!/^[1][3,4,5,7,8][0-9]{9}$/g.test(this.state.doctorphone)){\r\n    //   return message.warning(\"请输入正确的手机号\")\r\n    // }\r\n    // if(!this.state.doctorposition){\r\n    //   return message.warning(\"医生职位不可为空！！！\");\r\n    // }\r\n    // if(!this.state.doctordepart){\r\n    //   return message.warning(\"医生科室不可为空！！！\");\r\n    // }\r\n    // if(!this.state.doctorproject){\r\n    //   return message.warning(\"医生所属项目不可为空！！！\");\r\n    // }\r\n    const payload={\r\n      patientname:this.state.patientname,\r\n      patientsex:this.state.patientsex,\r\n      patientid:this.state.patientid,\r\n      patientage:this.state.patientage,\r\n      patientphone:this.state.patientphone,\r\n      diseasename:this.state.diseasename,\r\n      diseasedetail:this.state.diseasedetail,\r\n      clinicdate:this.state.clinicdate,\r\n    }\r\n    this.setState({\r\n      chatvisible:!this.state.chatvisible\r\n    })\r\n    //编辑医生保存后，调用后端接口，把数据传给后端\r\n    const requestData=payload;\r\n    Savepatientlist(requestData).then(response=>{\r\n      message.success(response.data.message)\r\n      console.log(response.data.data);\r\n    }).catch(error=>{\r\n        console.log(error)\r\n    })\r\n\r\n  }\r\n  closeModalEvent = () =>{\r\n    this.setState({\r\n      chatvisible:false\r\n  })\r\n  }\r\n  render(){\r\n    const { Option } = Select;\r\n    const { TextArea } = Input;\r\n    return (\r\n        <Fragment>\r\n          <Modal title=\"详情\" visible={this.state.chatvisible} width=\"1000px\" onCancel={this.handleCancel} footer={null}>\r\n            <div>\r\n              <div className=\"detail_left\">\r\n            <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            患者姓名：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       {/* <Input \r\n                       onChange={(e) => this.inputChange('patientname',e)} value={this.state.patientname}\r\n                       \r\n                       />  */}\r\n                       <span style={{lineHeight:\"30px\"}}>{this.state.patientname}</span>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            患者性别：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       {/* <Input\r\n                       onChange={(e) => this.inputChange('patientsex',e)} value={this.state.patientsex}\r\n                      \r\n                       />  */}\r\n                       {/* <Select style={{ width: 355 }} onChange={(e) => this.selectChange('patientsex',e)}  value={this.state.patientsex}>\r\n                        <Option value=\"man\">男</Option>\r\n                        <Option value=\"woman\">女</Option>\r\n                      </Select> */}\r\n                      <span style={{lineHeight:\"30px\"}}>{this.state.patientsex}</span>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            患者证件号：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                    <span style={{lineHeight:\"30px\"}}>{this.state.patientid}</span>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            患者年龄：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                    <span style={{lineHeight:\"30px\"}}>{this.state.patientage}</span>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            患者电话：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                    <span style={{lineHeight:\"30px\"}}>{this.state.patientphone}</span>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            疾病名称：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                    <span style={{lineHeight:\"30px\"}}>{this.state.diseasename}</span>\r\n                       \r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            诊断详情：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       {/* <Input\r\n                       onChange={(e) => this.inputChange('diseasedetail',e)} value={this.state.diseasedetail}\r\n                       \r\n                       />  */}\r\n                       <span style={{lineHeight:\"30px\"}}>{this.state.diseasedetail}</span>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form_padding\">\r\n                    <Col span={6}>\r\n                        <span className=\"form_title\">\r\n                            就诊日期：\r\n                        </span>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                       {/* <Input\r\n                       onChange={(e) => this.inputChange('clinicdate',e)} value={this.state.clinicdate}\r\n                       \r\n                       />  */}\r\n                       \r\n                    {/* <DatePicker onChange={(date, dateString) =>\r\n                      this.onChangedate(date, dateString)}  */}\r\n                      {/* value={this.state.clinicdate} */}\r\n                      {/* allowClear={false}/> */}\r\n                      <span style={{lineHeight:\"35px\"}}>{this.state.clinicdate}</span>\r\n                </Col>\r\n                \r\n                </Row>\r\n                </div>\r\n                <div className=\"chat_right\"\r\n                >\r\n                  <div className=\"chat_right_chat\"></div>\r\n                  <div className=\"chat_right_send\">\r\n                  \r\n                    <div className=\"send_information\">\r\n                      <div style={{marginLeft:\"5px\"}}><PictureTwoTone /></div>\r\n                      <div style={{marginLeft:\"5px\"}}>请输入消息</div>\r\n                    </div>\r\n                    <div className=\"send_button\">\r\n                      <button>\r\n                        发送\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"buttonmain\" style={{clear:'both'}}>\r\n                  {/* <Button\r\n                    className=\"buttonsave_content\"\r\n                    type=\"primary\"\r\n                    onClick={this.formSubmitEvent}\r\n                  >\r\n                    <span style={{ letterSpacing: '2px' }}>保存</span>\r\n                  </Button> */}\r\n                  <Button\r\n                    className=\"buttoncancel_content\"\r\n                    onClick={this.closeModalEvent}\r\n                  >\r\n                    <span style={{ letterSpacing: '2px' ,margin:\"auto\"}} >\r\n                      取消\r\n                    </span>\r\n                  </Button>\r\n                </div>\r\n            </div>\r\n          </Modal>\r\n        </Fragment>\r\n      );\r\n    };\r\n  }\r\nexport default PatientChat;",{"ruleId":"285","replacedBy":"286"},{"ruleId":"287","replacedBy":"288"},{"ruleId":"289","severity":1,"message":"290","line":8,"column":29,"nodeType":"291","messageId":"292","endLine":8,"endColumn":35},{"ruleId":"289","severity":1,"message":"293","line":3,"column":10,"nodeType":"291","messageId":"292","endLine":3,"endColumn":14},{"ruleId":"289","severity":1,"message":"294","line":3,"column":16,"nodeType":"291","messageId":"292","endLine":3,"endColumn":20},{"ruleId":"289","severity":1,"message":"295","line":3,"column":22,"nodeType":"291","messageId":"292","endLine":3,"endColumn":27},{"ruleId":"289","severity":1,"message":"296","line":3,"column":29,"nodeType":"291","messageId":"292","endLine":3,"endColumn":35},{"ruleId":"289","severity":1,"message":"297","line":3,"column":36,"nodeType":"291","messageId":"292","endLine":3,"endColumn":39},{"ruleId":"289","severity":1,"message":"298","line":3,"column":40,"nodeType":"291","messageId":"292","endLine":3,"endColumn":43},{"ruleId":"289","severity":1,"message":"299","line":4,"column":10,"nodeType":"291","messageId":"292","endLine":4,"endColumn":22},{"ruleId":"289","severity":1,"message":"300","line":4,"column":23,"nodeType":"291","messageId":"292","endLine":4,"endColumn":37},{"ruleId":"289","severity":1,"message":"301","line":27,"column":13,"nodeType":"291","messageId":"292","endLine":27,"endColumn":17},{"ruleId":"289","severity":1,"message":"302","line":28,"column":13,"nodeType":"291","messageId":"292","endLine":28,"endColumn":19},{"ruleId":"289","severity":1,"message":"303","line":29,"column":13,"nodeType":"291","messageId":"292","endLine":29,"endColumn":20},{"ruleId":"289","severity":1,"message":"304","line":2,"column":23,"nodeType":"291","messageId":"292","endLine":2,"endColumn":33},{"ruleId":"289","severity":1,"message":"294","line":4,"column":16,"nodeType":"291","messageId":"292","endLine":4,"endColumn":20},{"ruleId":"305","severity":1,"message":"306","line":28,"column":38,"nodeType":"307","messageId":"308","endLine":28,"endColumn":40},{"ruleId":"289","severity":1,"message":"294","line":3,"column":16,"nodeType":"291","messageId":"292","endLine":3,"endColumn":20},{"ruleId":"305","severity":1,"message":"306","line":29,"column":38,"nodeType":"307","messageId":"308","endLine":29,"endColumn":40},{"ruleId":"309","severity":1,"message":"310","line":22,"column":9,"nodeType":"311","messageId":"312","endLine":77,"endColumn":10},{"ruleId":"289","severity":1,"message":"313","line":3,"column":8,"nodeType":"291","messageId":"292","endLine":3,"endColumn":17},{"ruleId":"314","severity":1,"message":"315","line":117,"column":27,"nodeType":"316","endLine":117,"endColumn":30},{"ruleId":"314","severity":1,"message":"315","line":163,"column":15,"nodeType":"316","endLine":163,"endColumn":56},{"ruleId":"314","severity":1,"message":"315","line":175,"column":15,"nodeType":"316","endLine":175,"endColumn":58},{"ruleId":"289","severity":1,"message":"317","line":2,"column":17,"nodeType":"291","messageId":"292","endLine":2,"endColumn":22},{"ruleId":"289","severity":1,"message":"295","line":2,"column":32,"nodeType":"291","messageId":"292","endLine":2,"endColumn":37},{"ruleId":"289","severity":1,"message":"296","line":2,"column":10,"nodeType":"291","messageId":"292","endLine":2,"endColumn":16},{"ruleId":"289","severity":1,"message":"318","line":3,"column":9,"nodeType":"291","messageId":"292","endLine":3,"endColumn":24},{"ruleId":"289","severity":1,"message":"319","line":4,"column":8,"nodeType":"291","messageId":"292","endLine":4,"endColumn":30},{"ruleId":"289","severity":1,"message":"320","line":5,"column":8,"nodeType":"291","messageId":"292","endLine":5,"endColumn":21},{"ruleId":"305","severity":1,"message":"306","line":69,"column":12,"nodeType":"307","messageId":"308","endLine":69,"endColumn":14},{"ruleId":"305","severity":1,"message":"306","line":159,"column":32,"nodeType":"307","messageId":"308","endLine":159,"endColumn":34},{"ruleId":"289","severity":1,"message":"321","line":4,"column":8,"nodeType":"291","messageId":"292","endLine":4,"endColumn":13},{"ruleId":"305","severity":1,"message":"306","line":42,"column":31,"nodeType":"307","messageId":"308","endLine":42,"endColumn":33},{"ruleId":"289","severity":1,"message":"322","line":5,"column":10,"nodeType":"291","messageId":"292","endLine":5,"endColumn":24},{"ruleId":"323","severity":1,"message":"324","line":44,"column":5,"nodeType":"325","messageId":"326","endLine":44,"endColumn":20},{"ruleId":"289","severity":1,"message":"327","line":76,"column":31,"nodeType":"291","messageId":"292","endLine":76,"endColumn":49},{"ruleId":"289","severity":1,"message":"328","line":76,"column":50,"nodeType":"291","messageId":"292","endLine":76,"endColumn":68},{"ruleId":"289","severity":1,"message":"329","line":77,"column":9,"nodeType":"291","messageId":"292","endLine":77,"endColumn":27},{"ruleId":"289","severity":1,"message":"330","line":77,"column":28,"nodeType":"291","messageId":"292","endLine":77,"endColumn":46},{"ruleId":"289","severity":1,"message":"331","line":2,"column":23,"nodeType":"291","messageId":"292","endLine":2,"endColumn":38},{"ruleId":"289","severity":1,"message":"332","line":5,"column":7,"nodeType":"291","messageId":"292","endLine":5,"endColumn":23},{"ruleId":"333","severity":1,"message":"334","line":20,"column":1,"nodeType":"335","endLine":40,"endColumn":2},{"ruleId":"285","replacedBy":"336"},{"ruleId":"287","replacedBy":"337"},{"ruleId":"305","severity":1,"message":"306","line":56,"column":32,"nodeType":"307","messageId":"308","endLine":56,"endColumn":34},{"ruleId":"338","severity":1,"message":"339","line":81,"column":53,"nodeType":"340","messageId":"341","endLine":81,"endColumn":55},{"ruleId":"305","severity":1,"message":"306","line":82,"column":16,"nodeType":"307","messageId":"308","endLine":82,"endColumn":18},{"ruleId":"289","severity":1,"message":"342","line":2,"column":30,"nodeType":"291","messageId":"292","endLine":2,"endColumn":36},{"ruleId":"289","severity":1,"message":"343","line":3,"column":9,"nodeType":"291","messageId":"292","endLine":3,"endColumn":27},{"ruleId":"289","severity":1,"message":"344","line":3,"column":9,"nodeType":"291","messageId":"292","endLine":3,"endColumn":15},{"ruleId":"289","severity":1,"message":"345","line":3,"column":16,"nodeType":"291","messageId":"292","endLine":3,"endColumn":21},{"ruleId":"289","severity":1,"message":"304","line":3,"column":23,"nodeType":"291","messageId":"292","endLine":3,"endColumn":33},{"ruleId":"314","severity":1,"message":"315","line":79,"column":13,"nodeType":"316","endLine":79,"endColumn":54},{"ruleId":"314","severity":1,"message":"315","line":91,"column":13,"nodeType":"316","endLine":91,"endColumn":56},{"ruleId":"289","severity":1,"message":"295","line":2,"column":31,"nodeType":"291","messageId":"292","endLine":2,"endColumn":36},{"ruleId":"289","severity":1,"message":"344","line":3,"column":9,"nodeType":"291","messageId":"292","endLine":3,"endColumn":15},{"ruleId":"289","severity":1,"message":"345","line":3,"column":16,"nodeType":"291","messageId":"292","endLine":3,"endColumn":21},{"ruleId":"289","severity":1,"message":"304","line":3,"column":23,"nodeType":"291","messageId":"292","endLine":3,"endColumn":33},{"ruleId":"314","severity":1,"message":"315","line":142,"column":13,"nodeType":"316","endLine":142,"endColumn":54},{"ruleId":"314","severity":1,"message":"315","line":154,"column":13,"nodeType":"316","endLine":154,"endColumn":56},{"ruleId":"289","severity":1,"message":"342","line":4,"column":38,"nodeType":"291","messageId":"292","endLine":4,"endColumn":44},{"ruleId":"289","severity":1,"message":"344","line":6,"column":9,"nodeType":"291","messageId":"292","endLine":6,"endColumn":15},{"ruleId":"289","severity":1,"message":"345","line":6,"column":16,"nodeType":"291","messageId":"292","endLine":6,"endColumn":21},{"ruleId":"289","severity":1,"message":"304","line":6,"column":23,"nodeType":"291","messageId":"292","endLine":6,"endColumn":33},{"ruleId":"289","severity":1,"message":"346","line":50,"column":11,"nodeType":"291","messageId":"292","endLine":50,"endColumn":21},{"ruleId":"314","severity":1,"message":"315","line":166,"column":13,"nodeType":"316","endLine":166,"endColumn":54},{"ruleId":"289","severity":1,"message":"342","line":2,"column":38,"nodeType":"291","messageId":"292","endLine":2,"endColumn":44},{"ruleId":"305","severity":1,"message":"306","line":35,"column":32,"nodeType":"307","messageId":"308","endLine":35,"endColumn":34},{"ruleId":"289","severity":1,"message":"342","line":2,"column":38,"nodeType":"291","messageId":"292","endLine":2,"endColumn":44},{"ruleId":"305","severity":1,"message":"306","line":31,"column":32,"nodeType":"307","messageId":"308","endLine":31,"endColumn":34},{"ruleId":"305","severity":1,"message":"306","line":68,"column":32,"nodeType":"307","messageId":"308","endLine":68,"endColumn":34},{"ruleId":"305","severity":1,"message":"306","line":69,"column":32,"nodeType":"307","messageId":"308","endLine":69,"endColumn":34},{"ruleId":"289","severity":1,"message":"295","line":2,"column":32,"nodeType":"291","messageId":"292","endLine":2,"endColumn":37},{"ruleId":"314","severity":1,"message":"315","line":180,"column":13,"nodeType":"316","endLine":180,"endColumn":54},{"ruleId":"314","severity":1,"message":"315","line":192,"column":13,"nodeType":"316","endLine":192,"endColumn":54},{"ruleId":"289","severity":1,"message":"347","line":3,"column":54,"nodeType":"291","messageId":"292","endLine":3,"endColumn":64},{"ruleId":"289","severity":1,"message":"348","line":4,"column":25,"nodeType":"291","messageId":"292","endLine":4,"endColumn":38},{"ruleId":"289","severity":1,"message":"349","line":4,"column":39,"nodeType":"291","messageId":"292","endLine":4,"endColumn":53},{"ruleId":"289","severity":1,"message":"346","line":119,"column":11,"nodeType":"291","messageId":"292","endLine":119,"endColumn":21},{"ruleId":"289","severity":1,"message":"347","line":5,"column":54,"nodeType":"291","messageId":"292","endLine":5,"endColumn":64},{"ruleId":"289","severity":1,"message":"350","line":196,"column":13,"nodeType":"291","messageId":"292","endLine":196,"endColumn":19},{"ruleId":"289","severity":1,"message":"351","line":197,"column":13,"nodeType":"291","messageId":"292","endLine":197,"endColumn":21},"no-native-reassign",["352"],"no-negated-in-lhs",["353"],"no-unused-vars","'Footer' is assigned a value but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Icon' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'UserOutlined' is defined but never used.","'UnlockOutlined' is defined but never used.","'hour' is assigned a value but never used.","'minute' is assigned a value but never used.","'seconds' is assigned a value but never used.","'HashRouter' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Schedules' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Modal' is defined but never used.","'FileAddOutlined' is defined but never used.","'ScheduleTableComponent' is defined but never used.","'AdddoctorForm' is defined but never used.","'store' is defined but never used.","'DeleteOutlined' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'registrationFeeone' is assigned a value but never used.","'registrationNumone' is assigned a value but never used.","'registrationFeetwo' is assigned a value but never used.","'registrationNumtwo' is assigned a value but never used.","'applyMiddleware' is defined but never used.","'composeEnhancers' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["352"],["353"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Select' is defined but never used.","'GetdocScheduleList' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'dateFormat' is assigned a value but never used.","'DatePicker' is defined but never used.","'GetdepartList' is defined but never used.","'GetprojectList' is defined but never used.","'Option' is assigned a value but never used.","'TextArea' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]